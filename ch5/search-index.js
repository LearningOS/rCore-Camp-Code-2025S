var searchIndex = new Map(JSON.parse('[\
["os",{"t":"HCCHCCCCQQHCCCCCCSSSSSSSSSFNNNNHNNNNHFONNNNHHHNHNNNFNNNNNHNNNNNFEEFFFFFFFFOCOOOHCCHCCOOHHHHSSFFFFKSISFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNOOMNNNNNNNNNNNNNNNNNNNNNNNNFKIFFOMNNNNNNNOOMNNNOONHHHNNNNHNNNMNNOOONNNNNNNNNJJHHHPPFFFGFTTTTONNNNONNNNNONNNNNNNNNNNNNNNNNNNNONNHHHNNNHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONONNNNONNNHNNHHNNNHHHNNNNNNNNNNNNNNNNNNNNNNNNNNOTTTFFFTTTTTNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNHHHNNNNNNNNNNNNSSSSHHHHHFOCFNNNNONNNNNSSSSSSSSSSSSSSCCHSSHHFNNNNNOHHHHHHHHHHHHNNNOSFFFFPPFFFGPPOHHNNCOHHHNHHNCOONOHCOHCOOHOHOHCHCNNNFNNNNNOOONNNNFFFFFOONNNNNNNNNNNONNNNNNNNNNNNNNNNHHNHNONNNNNNNNNNNNNNNFFONHNNNNNNHNNNNNONNNNNNFFONNNNNOHHHNNNNONNNHHNHNNNNNNHPPFFGPPONNNNNNNONNNNONNNNNNNNNOONNNNNOONOOOOONONNNNNNNNNSSSHHHHFCHHOOOHHOHHOHOFNNNNNNOOONOONNNO","n":["clear_bss","config","console","kernel_log_info","lang_items","loader","logging","mm","print","println","rust_main","sbi","sync","syscall","task","timer","trap","CLOCK_FREQ","KERNEL_HEAP_SIZE","KERNEL_STACK_SIZE","MEMORY_END","PAGE_SIZE","PAGE_SIZE_BITS","TRAMPOLINE","TRAP_CONTEXT_BASE","USER_STACK_SIZE","Stdout","borrow","borrow_mut","from","into","print","try_from","try_into","type_id","write_str","panic","APP_NAMES","__private_field","borrow","borrow_mut","deref","from","get_app_data","get_app_data_by_name","get_num_app","into","list_apps","try_from","try_into","type_id","SimpleLogger","borrow","borrow_mut","enabled","flush","from","init","into","log","try_from","try_into","type_id","FrameTracker","KERNEL_SPACE","KERNEL_SPACE","KERNEL_SPACE","MapPermission","MemorySet","PageTableEntry","PhysAddr","PhysPageNum","VirtAddr","VirtPageNum","__private_field","address","areas","bits","bits","frame_alloc","frame_allocator","heap_allocator","init","memory_set","page_table","page_table","ppn","remap_test","translated_byte_buffer","translated_refmut","translated_str","PA_WIDTH_SV39","PPN_WIDTH_SV39","PhysAddr","PhysPageNum","SimpleRange","SimpleRangeIterator","StepByOne","VA_WIDTH_SV39","VPNRange","VPN_WIDTH_SV39","VirtAddr","VirtPageNum","aligned","aligned","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","ceil","ceil","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","current","end","eq","eq","eq","eq","floor","floor","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_bytes_array","get_end","get_mut","get_mut","get_pte_array","get_start","indexes","into","into","into","into","into","into","into_iter","into_iter","l","l","new","new","next","page_offset","page_offset","partial_cmp","partial_cmp","partial_cmp","partial_cmp","r","r","step","step","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","FRAME_ALLOCATOR","FrameAllocator","FrameAllocatorImpl","FrameTracker","StackFrameAllocator","__private_field","alloc","alloc","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","current","current","dealloc","dealloc","deref","drop","end","end","fmt","frame_alloc","frame_allocator_test","frame_dealloc","from","from","from","init","init_frame_allocator","into","into","into","new","new","new","ppn","recycled","recycled","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","HEAP_ALLOCATOR","HEAP_SPACE","handle_alloc_error","heap_test","init_heap","Framed","Identical","KERNEL_SPACE","MapArea","MapPermission","MapType","MemorySet","R","U","W","X","__private_field","activate","all","append_to","append_to","areas","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","complement","contains","copy_data","data_frames","deref","difference","ebss","edata","ekernel","empty","eq","eq","erodata","etext","extend","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_another","from_bits","from_bits_truncate","from_bits_unchecked","from_elf","from_existed_user","from_iter","hash","insert","insert_framed_area","intersection","intersects","into","into","into","into","into","is_all","is_empty","map","map_one","map_perm","map_trampoline","map_type","new","new_bare","new_kernel","not","page_table","partial_cmp","push","recycle_data_pages","remap_test","remove","remove_area_with_start_vpn","sbss_with_stack","sdata","set","shrink_to","shrink_to","srodata","stext","strampoline","sub","sub_assign","symmetric_difference","to_owned","to_owned","toggle","token","translate","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","union","unmap","unmap_one","vpn_range","A","D","G","PTEFlags","PageTable","PageTableEntry","R","U","V","W","X","all","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","complement","contains","difference","empty","empty","eq","executable","extend","find_pte","find_pte_create","flags","fmt","fmt","fmt","fmt","fmt","frames","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","from_token","hash","insert","intersection","intersects","into","into","into","is_all","is_empty","is_valid","map","new","new","not","partial_cmp","ppn","readable","remove","root_ppn","set","sub","sub_assign","symmetric_difference","to_owned","to_owned","toggle","token","translate","translate_va","translated_byte_buffer","translated_refmut","translated_str","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","union","unmap","writable","SBI_CONSOLE_GETCHAR","SBI_CONSOLE_PUTCHAR","SBI_SET_TIMER","SBI_SHUTDOWN","console_getchar","console_putchar","sbi_call","set_timer","shutdown","UPSafeCell","inner","up","UPSafeCell","borrow","borrow_mut","exclusive_access","from","inner","into","new","try_from","try_into","type_id","SYSCALL_EXEC","SYSCALL_EXIT","SYSCALL_FORK","SYSCALL_GETPID","SYSCALL_GET_TIME","SYSCALL_MMAP","SYSCALL_MUNMAP","SYSCALL_READ","SYSCALL_SBRK","SYSCALL_SET_PRIORITY","SYSCALL_SPAWN","SYSCALL_WAITPID","SYSCALL_WRITE","SYSCALL_YIELD","fs","process","syscall","FD_STDIN","FD_STDOUT","sys_read","sys_write","TimeVal","borrow","borrow_mut","fmt","from","into","sec","sys_exec","sys_exit","sys_fork","sys_get_time","sys_getpid","sys_mmap","sys_munmap","sys_sbrk","sys_set_priority","sys_spawn","sys_waitpid","sys_yield","try_from","try_into","type_id","usec","IDLE_PID","INITPROC","KernelStack","PidHandle","Processor","Ready","Running","TaskContext","TaskControlBlock","TaskManager","TaskStatus","UnInit","Zombie","__private_field","add_initproc","add_task","borrow","borrow_mut","context","current","current_task","current_trap_cx","current_user_token","deref","exit_current_and_run_next","fetch_task","from","id","idle_task_cx","inner","into","kernel_stack","kstack_alloc","manager","pid","pid_alloc","processor","ra","ready_queue","run_tasks","s","schedule","sp","suspend_current_and_run_next","switch","take_current_task","task","try_from","try_into","type_id","TaskContext","borrow","borrow_mut","from","goto_trap_return","into","ra","s","sp","try_from","try_into","type_id","zero_init","KSTACK_ALLOCATOR","KernelStack","PID_ALLOCATOR","PidHandle","RecycleAllocator","__private_field","__private_field","alloc","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","current","dealloc","deref","deref","drop","drop","from","from","from","from","from","get_top","into","into","into","into","into","kernel_stack_position","kstack_alloc","new","pid_alloc","push_on_top","recycled","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","TASK_MANAGER","TaskManager","__private_field","add","add_task","borrow","borrow","borrow_mut","borrow_mut","deref","fetch","fetch_task","from","from","into","into","new","ready_queue","try_from","try_from","try_into","try_into","type_id","type_id","PROCESSOR","Processor","__private_field","borrow","borrow","borrow_mut","borrow_mut","current","current","current_task","current_trap_cx","current_user_token","deref","from","from","get_idle_task_cx_ptr","idle_task_cx","into","into","new","run_tasks","schedule","take_current","take_current_task","try_from","try_from","try_into","try_into","type_id","type_id","__switch","Ready","Running","TaskControlBlock","TaskControlBlockInner","TaskStatus","UnInit","Zombie","base_size","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","change_program_brk","children","clone","clone_into","eq","exec","exit_code","fork","from","from","from","get_status","get_trap_cx","get_user_token","get_user_token","getpid","heap_bottom","inner","inner_exclusive_access","into","into","into","is_zombie","kernel_stack","memory_set","new","parent","pid","program_brk","task_cx","task_status","to_owned","trap_cx_ppn","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","MICRO_PER_SEC","MSEC_PER_SEC","TICKS_PER_SEC","get_time","get_time_ms","get_time_us","set_next_trigger","TrapContext","context","enable_timer_interrupt","init","kernel_satp","kernel_sp","sepc","set_kernel_trap_entry","set_user_trap_entry","sstatus","trap_from_kernel","trap_handler","trap_handler","trap_return","x","TrapContext","app_init_context","borrow","borrow_mut","fmt","from","into","kernel_satp","kernel_sp","sepc","set_sp","sstatus","trap_handler","try_from","try_into","type_id","x"],"q":[[0,"os"],[17,"os::config"],[26,"os::console"],[36,"os::lang_items"],[37,"os::loader"],[51,"os::logging"],[63,"os::mm"],[91,"os::mm::address"],[212,"os::mm::frame_allocator"],[261,"os::mm::heap_allocator"],[266,"os::mm::memory_set"],[402,"os::mm::page_table"],[503,"os::sbi"],[512,"os::sync"],[515,"os::sync::up"],[526,"os::syscall"],[543,"os::syscall::fs"],[547,"os::syscall::process"],[570,"os::task"],[620,"os::task::context"],[633,"os::task::id"],[689,"os::task::manager"],[713,"os::task::processor"],[743,"os::task::switch"],[744,"os::task::task"],[800,"os::timer"],[807,"os::trap"],[822,"os::trap::context"],[839,"core::fmt"],[840,"core::result"],[841,"core::any"],[842,"core::panic::panic_info"],[843,"alloc::vec"],[844,"core::option"],[845,"log"],[846,"alloc::string"],[847,"core::marker"],[848,"core::cmp"],[849,"core::clone"],[850,"core::alloc::layout"],[851,"alloc::sync"],[852,"core::iter::traits::collect"],[853,"core::hash"],[854,"core::cell"]],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,6,6,0,6,6,6,6,0,0,10,10,10,10,10,0,0,0,10,0,10,10,10,0,16,16,16,16,16,0,16,16,16,16,16,0,0,0,0,0,0,0,0,0,0,0,48,0,43,44,35,0,0,0,0,0,0,43,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,22,23,37,22,23,24,25,26,37,22,23,24,25,26,22,23,22,23,24,25,26,22,23,24,25,26,22,23,24,25,37,37,22,23,24,25,22,23,22,23,24,25,37,22,22,22,23,23,23,24,24,24,25,25,25,26,24,26,22,24,24,26,25,37,22,23,24,25,26,37,26,75,26,37,26,37,22,23,22,23,24,25,75,26,27,25,22,23,24,25,26,37,22,23,24,25,26,37,22,23,24,25,26,37,22,23,24,25,26,0,0,0,0,0,40,38,39,20,39,40,20,39,40,39,76,38,39,40,20,39,76,20,0,0,0,20,39,40,39,0,20,39,40,38,20,39,20,39,76,20,39,40,20,39,40,20,39,40,0,0,0,0,0,47,47,0,0,0,0,0,44,44,44,44,48,43,44,43,45,43,44,44,44,44,44,44,44,44,43,45,48,47,44,43,45,48,47,44,47,44,47,44,44,44,44,45,45,48,44,0,0,0,44,47,44,0,0,44,47,44,44,44,44,44,43,45,48,47,44,45,44,44,44,43,43,44,44,44,43,44,44,43,45,48,47,44,44,44,45,45,45,43,45,45,43,43,44,43,44,43,43,0,44,43,0,0,44,43,45,0,0,0,44,44,44,47,44,44,43,43,43,45,48,47,44,43,45,48,47,44,43,45,48,47,44,44,45,45,45,54,54,54,0,0,0,54,54,54,54,54,54,54,54,54,54,54,54,35,54,54,46,54,35,46,54,35,54,35,54,35,54,54,54,54,54,35,54,35,54,46,46,35,54,54,54,54,54,46,46,54,35,54,54,54,54,46,54,54,54,54,46,54,35,54,54,35,46,46,35,54,54,35,35,54,46,54,54,54,54,54,35,54,46,46,46,0,0,0,46,54,35,46,54,35,46,54,35,54,46,35,0,0,0,0,0,0,0,0,0,0,41,0,0,41,41,41,41,41,41,41,41,41,41,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,57,57,57,57,57,57,0,0,0,0,0,0,0,0,0,0,0,0,57,57,57,57,0,0,0,0,0,73,73,0,0,0,0,73,73,61,0,0,61,61,0,71,0,0,0,61,0,0,61,0,71,59,61,59,0,0,59,0,0,64,69,0,64,0,64,0,0,0,0,61,61,61,0,64,64,64,64,64,64,64,64,64,64,64,64,0,0,0,0,0,66,67,65,65,63,62,66,67,65,63,62,66,67,65,65,66,67,63,62,65,63,62,66,67,62,65,63,62,66,67,0,0,65,0,62,65,65,63,62,66,67,65,63,62,66,67,65,63,62,66,67,0,0,70,69,0,69,70,69,70,70,69,0,69,70,69,70,69,69,69,70,69,70,69,70,0,0,72,71,72,71,72,71,71,0,0,0,72,71,72,71,71,71,72,71,0,0,71,0,71,72,71,72,71,72,0,73,73,0,0,0,73,73,74,59,74,73,59,74,73,59,74,73,73,73,59,74,59,59,74,73,74,74,59,74,59,74,59,59,59,74,73,74,59,74,59,74,59,74,74,74,73,74,59,74,73,59,74,73,59,74,73,0,0,0,0,0,0,0,0,0,0,0,60,60,60,0,0,60,0,0,60,0,60,0,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60],"f":"{{}b}``0``````{{}d}````````````````{ce{}{}}0{cc{}}1{fb}{c{{h{e}}}{}{}}0{cj{}}{{ln}A`}{Abd}``66{Ad{{Af{n}}}}6{Ah{{Al{Aj}}}}{n{{An{{Al{Aj}}}}}}{{}Ah}:<776`::{{B`Bb}Bd}{B`b};><{{B`Bf}b}::9````````````````{{}{{An{Bh}}}}``{{}b}````0{{AhAjAh}{{Af{{Al{Aj}}}}}}{Ahc{}}{{AhAj}Bj}````````````{BlBd}{BnBd}{ce{}{}}00000000000{BlC`}{BnCb}{BlBl}{BnBn}{C`C`}{CbCb}{{{Cd{c}}}{{Cd{c}}}{CfChCjClCnD`}}{{ce}b{}{}}0000{{BlBl}Db}{{BnBn}Db}{{C`C`}Db}{{CbCb}Db}``{{BlBl}Bd}{{BnBn}Bd}{{C`C`}Bd}{{CbCb}Bd}?>{{BlDd}A`}{{BnDd}A`}{{C`Dd}A`}{{CbDd}A`}{cc{}}0{AhBl}{C`Bl}{CbBn}{AhBn}4{AhC`}{BlC`}6{AhCb}{BnCb}88{C`{{Al{Aj}}}}{{{Cd{c}}}c{CfChCjClCn}}{Blc{}}{C`c{}}{C`{{Al{Df}}}}3{Cb{{Dh{Ah}}}}{ce{}{}}000000{{{Cd{c}}}e{CfChCjClCn}{}}``{{cc}{{Dj{c}}}{CfChCjClCn}}{{cc}{{Cd{c}}}{CfChCjClCn}}{{{Dj{c}}}{{An{e}}}{CfChCjClCn}{}}{BlAh}{BnAh}{{BlBl}{{An{Db}}}}{{BnBn}{{An{Db}}}}{{C`C`}{{An{Db}}}}{{CbCb}{{An{Db}}}}``{Cfb}{Cbb}<<<<<{c{{h{e}}}{}{}}00000000000{cj{}}00000``````{Dl{{An{C`}}}}{Dn{{An{C`}}}}{ce{}{}}00000``{{DlC`}b}{{DnC`}b}{E`{{Eb{Dn}}}}{Bhb}``{{BhDd}A`}{{}{{An{Bh}}}}{{}b}{C`b}{cc{}}00{{DnC`C`}b}3:::{{}Dl}{C`Bh}{{}Dn}```{c{{h{e}}}{}{}}00000{cj{}}00``{Edd}99````````````{Efb}{{}Eh}{{EfBnBn}Bd}{{EjElCb}b}`{{EhEh}Eh}{{EhEh}b}10{EhAj}`21{ce{}{}}000000000{EnEn}{EhEh}{{ce}b{}{}}0{{EhEh}Db}2{{EhEh}Bd}{{EjEl{Al{Aj}}}b}`{F`{{Fb{{Eb{Ef}}}}}}:```={{EnEn}Bd}3``{{Ehc}b{{Ff{}{{Fd{Eh}}}}}}{{EnDd}A`}{{EhDd}A`}0000{cc{}}0000{EjEj}{Aj{{An{Eh}}}}{AjEh}0{{{Al{Aj}}}{{Fh{EfAhAh}}}}{EfEf}{cEh{{Ff{}{{Fd{Eh}}}}}}{{Ehc}bFj}{{EhEh}b}{{EfBnBnEh}b}{{EhEh}Eh}{{EhEh}Bd}{ce{}{}}0000{EhBd}0{{EjEl}b}{{EjElCb}b}`{Efb}`{{BnBnEnEh}Ej}{{}Ef}0{EhEh}`{{EhEh}{{An{Db}}}}{{EfEj{An{{Al{Aj}}}}}b}5{{}b}>{{EfCb}b}``{{EhEhBd}b}{{EfBnBn}Bd}:```?{{EhEh}b}{{EhEh}Eh}??1{EfAh}{{EfCb}{{An{Df}}}}{c{{h{e}}}{}{}}000000000{cj{}}00004{{EjEl}b}{{EjElCb}b}````````````{{}Fl}{{FlFl}Fl}{{FlFl}b}10{FlAj}``21{ce{}{}}00000{FlFl}{DfDf}{{ce}b{}{}}0{{FlFl}Db}3{{FlFl}Bd}89{{}Df}1{DfBd}{{Flc}b{{Ff{}{{Fd{Fl}}}}}}{{ElCb}{{An{Df}}}}0{DfFl}{{FlDd}A`}0000`{cc{}}00{Aj{{An{Fl}}}}{AjFl}0{cFl{{Ff{}{{Fd{Fl}}}}}}{AhEl}{{Flc}bFj}{{FlFl}b}{{FlFl}Fl}>{ce{}{}}00{FlBd}0>{{ElCbC`Fl}b}{{}El}{{C`Fl}Df}{FlFl}{{FlFl}{{An{Db}}}}{DfC`}{DfBd}:`{{FlFlBd}b}:;:99;{ElAh}{{ElCb}{{An{Df}}}}{{ElBn}{{An{Bl}}}}{{AhAjAh}{{Af{{Al{Aj}}}}}}{Ahc{}}{{AhAj}Bj}{c{{h{e}}}{}{}}00000{cj{}}00{{FlFl}Fl}{{ElCb}b};````{{}Ah}{Ahb}{{AhAhAhAh}Ah}1{{}d}````{ce{}{}}0{{{Eb{c}}}{{Fn{c}}}{}}{cc{}}`2{c{{Eb{c}}}{}};;:````````````````{{Ah{Dh{Ah}}}G`}``{{AhAjAh}G`}0`55{{GbDd}A`}46`{AjG`}{Gdd}{{}G`}{{GbAh}G`}1{{AhAhAh}G`}{{AhAh}G`}{GdG`}{G`G`}7{{G`Gd}G`}6{c{{h{e}}}{}{}}0{cj{}}```````````````{{}b}{{{Fb{Gf}}}b}{ce{}{}}0``{{}{{An{{Fb{Gf}}}}}}{{}Gh}{{}Ah}{Gj{{Fb{Gf}}}}{Gdb}4{cc{}}```6`{{}Gl}``{{}Gn}```:`{H`b}`;`8`==<`993{AhH`}:```>>={{}H`}```````{HbAh}<<<<<<<<<<`{{HbAh}b}{Hd{{Eb{Hb}}}}{Hf{{Eb{Hb}}}}{Gnb}{Glb};;;;;{GlAh}{ce{}{}}0000{Ah{{Fh{AhAh}}}}={{}Hb}={{Glc}{}Hh}`{c{{h{e}}}{}{}}000000000{cj{}}0000```{{Hj{Fb{Gf}}}b}{{{Fb{Gf}}}b}7777{Hl{{Eb{Hj}}}}{Hj{{An{{Fb{Gf}}}}}}{{}{{An{{Fb{Gf}}}}}}{cc{}}0;;{{}Hj}`888877```<<<<{Hn{{An{{Fb{Gf}}}}}}`3{{}Gh}{{}Ah}{I`{{Eb{Hn}}}}55{HnH`}`{ce{}{}}0{{}Hn}{{}b}{H`b}8;{c{{h{e}}}{}{}}000{cj{}}0`````````555555{{GfGd}{{An{Ah}}}}`{IbIb}{{ce}b{}{}}{{IbIb}Bd}{{Gf{Al{Aj}}}b}`{{{Fb{Gf}}}{{Fb{Gf}}}}{cc{}}00{IdIb}{IdGh}{GfAh}{IdAh}1``{Gf{{Fn{Id}}}}{ce{}{}}00{IdBd}``{{{Al{Aj}}}Gf}`````2`{c{{h{e}}}{}{}}00000{cj{}}00```{{}Ah}00{{}b}``00```00`{{}d}0`0``{{AhAhAhAhAh}Gh}88{{GhDd}A`}?9```{{GhAh}b}``776`","D":"CGb","p":[[1,"unit"],[1,"never"],[5,"Arguments",839],[6,"Result",840],[5,"TypeId",841],[5,"Stdout",26],[1,"str"],[8,"Result",839],[5,"PanicInfo",842],[5,"APP_NAMES",37],[5,"Vec",843],[1,"usize"],[1,"u8"],[1,"slice"],[6,"Option",844],[5,"SimpleLogger",51],[5,"Metadata",845],[1,"bool"],[5,"Record",845],[5,"FrameTracker",212],[5,"String",846],[5,"PhysAddr",91],[5,"VirtAddr",91],[5,"PhysPageNum",91],[5,"VirtPageNum",91],[5,"SimpleRange",91],[10,"StepByOne",91],[10,"Copy",847],[10,"PartialEq",848],[10,"PartialOrd",848],[10,"Debug",839],[10,"Clone",849],[6,"Ordering",848],[5,"Formatter",839],[5,"PageTableEntry",402],[1,"array"],[5,"SimpleRangeIterator",91],[10,"FrameAllocator",212],[5,"StackFrameAllocator",212],[5,"FRAME_ALLOCATOR",212],[5,"UPSafeCell",515],[5,"Layout",850],[5,"MemorySet",266],[5,"MapPermission",266],[5,"MapArea",266],[5,"PageTable",402],[6,"MapType",266],[5,"KERNEL_SPACE",266],[5,"Arc",851],[17,"Item"],[10,"IntoIterator",852],[1,"tuple"],[10,"Hasher",853],[5,"PTEFlags",402],[5,"RefMut",854],[1,"isize"],[5,"TimeVal",547],[1,"i32"],[5,"TaskControlBlock",744],[5,"TrapContext",822],[5,"INITPROC",570],[5,"KernelStack",633],[5,"PidHandle",633],[5,"TaskContext",620],[5,"RecycleAllocator",633],[5,"PID_ALLOCATOR",633],[5,"KSTACK_ALLOCATOR",633],[10,"Sized",847],[5,"TaskManager",689],[5,"TASK_MANAGER",689],[5,"Processor",713],[5,"PROCESSOR",713],[6,"TaskStatus",744],[5,"TaskControlBlockInner",744],[8,"VPNRange",91],[8,"FrameAllocatorImpl",212]],"r":[[63,212],[64,266],[65,266],[66,266],[67,266],[68,266],[69,402],[70,91],[71,91],[72,91],[73,91],[79,212],[87,266],[88,402],[89,402],[90,402],[512,515],[572,633],[573,633],[574,713],[577,620],[578,744],[579,689],[580,744],[585,689],[590,713],[591,713],[592,713],[595,689],[602,633],[605,633],[609,713],[611,713],[615,713],[807,822]],"b":[[147,"impl-From%3Cusize%3E-for-PhysAddr"],[148,"impl-From%3CPhysPageNum%3E-for-PhysAddr"],[149,"impl-From%3CVirtPageNum%3E-for-VirtAddr"],[150,"impl-From%3Cusize%3E-for-VirtAddr"],[152,"impl-From%3Cusize%3E-for-PhysPageNum"],[153,"impl-From%3CPhysAddr%3E-for-PhysPageNum"],[155,"impl-From%3Cusize%3E-for-VirtPageNum"],[156,"impl-From%3CVirtAddr%3E-for-VirtPageNum"],[322,"impl-Binary-for-MapPermission"],[323,"impl-UpperHex-for-MapPermission"],[324,"impl-Octal-for-MapPermission"],[325,"impl-Debug-for-MapPermission"],[326,"impl-LowerHex-for-MapPermission"],[445,"impl-Debug-for-PTEFlags"],[446,"impl-Binary-for-PTEFlags"],[447,"impl-Octal-for-PTEFlags"],[448,"impl-UpperHex-for-PTEFlags"],[449,"impl-LowerHex-for-PTEFlags"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAI4BYwAbAAIAIAAEACcAAwAxAAIANQADADwAAwBBAAEASwAAAE0AAQBWAAAAXQAAAGMAAABlAAAAagALAHgAEwCOAAMAlAADAJkAAQCcAAEAoQAAAKUAAACtAAYAtgAFAL0AFwDWAAEA2gARAPIAAAD3AAAA+QAAAPsACgAJAQAACwEBABYBAAAaAQEAIQEAACQBDgA2AQEAOQECAD0BCgBNAQAAUwEBAGABAgBkAQEAaQEBAHABAQB0AQMAewEBAIABDgCQAQUAmQEEAKQBAACoAQoAuAEAALoBAAC+AQUAygEAAMwBAADaAQAA3gEAAOMBAQDsAQgA+AEDAAUCAQAMAgIAIAICACQCAwAqAgEALQIAAC8CAAAzAgAANwIDAEgCAABLAgEAUgIAAGECAABqAgIAbgIBAHYCAgB6AgAAfAIAAH4CEwCfAgAAogIPALQCAAC3AgQAwwIHAMwCBADWAgAA4gIFAOwCAADxAgUA+QICAAIDAAANAwAAFgMAABgDCAAvAwEAOQMCAEQDAgA="}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
