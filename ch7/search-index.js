var searchIndex = new Map(JSON.parse('[\
["os",{"t":"HCCCCCCCQQHCCCCCCSSSSSSSSSSSFNNNNHNNNNEECFIFOHNNNNNNNNCFSFFONNNNNNNNNNNNNNNNNNNNNNNNNNNNNTTKTFFFFFFFNNNNNNOONNNNNNONNNNNONNNNNNNNNNNNNNNNNOOCNNNNNNNHHOONHONCMMOONNCNNNNNNNNNNNNMOOMTFFFTTFTTONNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNHNNOHNNNNNONNNNNNNNNNNNNNNNNNNNNONPPPFFSGNONNNNNNNNONNNNNNONNNHNNNNNONOONNNNNNNNNNNONNONFFNNNNNNNNNNNNNNNNNNNNNNHFNNNNNHNNNNNFEEFFFFFFFKFFFFOCOOOOOOOHCHOCHHCCOOHOMHHHHSSFFFFKSISFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNOOMNNNNNNNNNNNNNNNNNNNNNNNNNFKIFFOMNNNNNNNOOMNNNOONHHHNNNNHNNNMNNOOONNNNNNNNNJJHHHPPFFFGFTTTTONNNNONNNNNONNNNNNNNNNNNNNNNNNNNONNHHHNNNHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNONONNNNONNNHNNHHNNNHHHNNNNNNNNNNNNNNNNNNNNNNNNNNOTTTFFFTTFFTTTNNNNNNOONNNNNNNNNNNNOONNNNNNNOONNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNHHHHNNNNNNNNNNNNNNNNNNSSSSHHHHHFOCFNNNNONNNNNSSSSSSSSSSSSSSSSSSSSSSSSSSCCHHHHHHHHHHFFNNNNHNNNNNOOHHHHHHHHHHHHHHHHHOONNNNNNOSFFSFPPFFFFFGPPOCHHONNHHHHCHHHHNHNHOCONOHCOOHHCOHOHCOHCOHCNNNFFNNNNNNNNNNNNNONNOONNNNNNNNFNNNNNOOONNNNFFFFFOONNNNNNNNNNNONNNNNNNNNNNNNNNNHHNHNONNNNNNNNNNNNNNNFFFOONHNNNNNNNNNHNNNNNNNHOHNNNNNNNNNFFONNNNNOHHHNNNNONNNHHNHNNNNNNSTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTTFNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHPPFFGPPNONNNNNNNONNNNOONNNNONNNNNOOONNNNNOOONOOOOOOOONOONNNNNNNNNSSSHHHHFCHHOOOHHOHHOHOFNNNNNNNNOOONONONNNO","n":["clear_bss","config","console","drivers","fs","lang_items","logging","mm","print","println","rust_main","sbi","sync","syscall","task","timer","trap","CLOCK_FREQ","KERNEL_HEAP_SIZE","KERNEL_STACK_SIZE","MAX_SYSCALL_NUM","MEMORY_END","MMIO","PAGE_SIZE","PAGE_SIZE_BITS","TRAMPOLINE","TRAP_CONTEXT_BASE","USER_STACK_SIZE","Stdout","borrow","borrow_mut","from","into","print","try_from","try_into","type_id","write_str","BLOCK_DEVICE","BLOCK_DEVICE","block","BLOCK_DEVICE","BlockDeviceImpl","VirtIOBlock","__private_field","block_device_test","borrow","borrow_mut","deref","from","into","try_from","try_into","type_id","virtio_blk","QUEUE_FRAMES","VIRTIO0","VirtIOBlock","VirtioHal","__private_field","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","deref","dma_alloc","dma_dealloc","from","from","from","into","into","into","new","phys_to_virt","read_block","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","virt_to_phys","write_block","DIR","FILE","File","NULL","OSInode","OpenFlags","Pipe","Stat","StatMode","Stdin","Stdout","all","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow_mut","borrow_mut","buffer","clone","clone_into","cmp","complement","contains","dev","difference","empty","eq","extend","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","hash","inner","ino","inode","insert","intersection","intersects","into","into","is_all","is_empty","list_apps","make_pipe","mode","nlink","not","open_file","pad","partial_cmp","pipe","read","readable","readable","readable","remove","set","stdio","sub","sub_assign","symmetric_difference","to_owned","toggle","try_from","try_from","try_into","try_into","type_id","type_id","union","writable","writable","writable","write","CREATE","OSInode","OSInodeInner","OpenFlags","RDONLY","RDWR","ROOT_INODE","TRUNC","WRONLY","__private_field","all","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","cmp","complement","contains","deref","difference","empty","eq","extend","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","hash","inner","inode","insert","intersection","intersects","into","into","into","into","is_all","is_empty","list_apps","new","not","offset","open_file","partial_cmp","read","read_all","read_write","readable","readable","remove","set","sub","sub_assign","symmetric_difference","to_owned","toggle","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","union","writable","writable","write","Empty","Full","Normal","Pipe","PipeRingBuffer","RING_BUFFER_SIZE","RingBufferStatus","all_write_ends_closed","arr","available_read","available_write","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","buffer","clone","clone_into","eq","from","from","from","head","into","into","into","make_pipe","new","read","read_byte","read_end_with_buffer","readable","readable","set_write_end","status","tail","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","writable","writable","write","write_byte","write_end","write_end_with_buffer","Stdin","Stdout","borrow","borrow","borrow_mut","borrow_mut","from","from","into","into","read","read","readable","readable","try_from","try_from","try_into","try_into","type_id","type_id","writable","writable","write","write","panic","SimpleLogger","borrow","borrow_mut","enabled","flush","from","init","into","log","try_from","try_into","type_id","FrameTracker","KERNEL_SPACE","KERNEL_SPACE","KERNEL_SPACE","MapPermission","MemorySet","PageTable","PageTableEntry","PhysAddr","PhysPageNum","StepByOne","UserBuffer","UserBufferIterator","VirtAddr","VirtPageNum","__private_field","address","areas","bits","bits","buffers","buffers","current_buffer","current_idx","frame_alloc","frame_allocator","frame_dealloc","frames","heap_allocator","init","kernel_token","memory_set","page_table","page_table","ppn","remap_test","root_ppn","step","translated_byte_buffer","translated_ref","translated_refmut","translated_str","PA_WIDTH_SV39","PPN_WIDTH_SV39","PhysAddr","PhysPageNum","SimpleRange","SimpleRangeIterator","StepByOne","VA_WIDTH_SV39","VPNRange","VPN_WIDTH_SV39","VirtAddr","VirtPageNum","aligned","aligned","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","ceil","ceil","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","current","end","eq","eq","eq","eq","floor","floor","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_bytes_array","get_end","get_mut","get_mut","get_pte_array","get_ref","get_start","indexes","into","into","into","into","into","into","into_iter","into_iter","l","l","new","new","next","page_offset","page_offset","partial_cmp","partial_cmp","partial_cmp","partial_cmp","r","r","step","step","step","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","FRAME_ALLOCATOR","FrameAllocator","FrameAllocatorImpl","FrameTracker","StackFrameAllocator","__private_field","alloc","alloc","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","current","current","dealloc","dealloc","deref","drop","end","end","fmt","frame_alloc","frame_allocator_test","frame_dealloc","from","from","from","init","init_frame_allocator","into","into","into","new","new","new","ppn","recycled","recycled","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","HEAP_ALLOCATOR","HEAP_SPACE","handle_alloc_error","heap_test","init_heap","Framed","Identical","KERNEL_SPACE","MapArea","MapPermission","MapType","MemorySet","R","U","W","X","__private_field","activate","all","append_to","append_to","areas","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","complement","contains","copy_data","data_frames","deref","difference","ebss","edata","ekernel","empty","eq","eq","erodata","etext","extend","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_another","from_bits","from_bits_truncate","from_bits_unchecked","from_elf","from_existed_user","from_iter","hash","insert","insert_framed_area","intersection","intersects","into","into","into","into","into","is_all","is_empty","kernel_token","map","map_one","map_perm","map_trampoline","map_type","new","new_bare","new_kernel","not","page_table","partial_cmp","push","recycle_data_pages","remap_test","remove","remove_area_with_start_vpn","sbss_with_stack","sdata","set","shrink_to","shrink_to","srodata","stext","strampoline","sub","sub_assign","symmetric_difference","to_owned","to_owned","toggle","token","translate","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","union","unmap","unmap_one","vpn_range","A","D","G","PTEFlags","PageTable","PageTableEntry","R","U","UserBuffer","UserBufferIterator","V","W","X","all","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffers","buffers","clone","clone","clone_into","clone_into","cmp","complement","contains","current_buffer","current_idx","difference","empty","empty","eq","executable","extend","find_pte","find_pte_create","flags","fmt","fmt","fmt","fmt","fmt","frames","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","from_token","hash","insert","intersection","intersects","into","into","into","into","into","into_iter","into_iter","is_all","is_empty","is_valid","len","map","new","new","new","next","not","partial_cmp","ppn","readable","remove","root_ppn","set","sub","sub_assign","symmetric_difference","to_owned","to_owned","toggle","token","translate","translate_va","translated_byte_buffer","translated_ref","translated_refmut","translated_str","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","union","unmap","writable","SBI_CONSOLE_GETCHAR","SBI_CONSOLE_PUTCHAR","SBI_SET_TIMER","SBI_SHUTDOWN","console_getchar","console_putchar","sbi_call","set_timer","shutdown","UPSafeCell","inner","up","UPSafeCell","borrow","borrow_mut","exclusive_access","from","inner","into","new","try_from","try_into","type_id","SYSCALL_CLOSE","SYSCALL_DUP","SYSCALL_EXEC","SYSCALL_EXIT","SYSCALL_FORK","SYSCALL_FSTAT","SYSCALL_GETPID","SYSCALL_GET_TIME","SYSCALL_KILL","SYSCALL_LINKAT","SYSCALL_MMAP","SYSCALL_MUNMAP","SYSCALL_OPEN","SYSCALL_PIPE","SYSCALL_READ","SYSCALL_SBRK","SYSCALL_SET_PRIORITY","SYSCALL_SIGACTION","SYSCALL_SIGPROCMASK","SYSCALL_SIGRETURN","SYSCALL_SPAWN","SYSCALL_TASK_INFO","SYSCALL_UNLINKAT","SYSCALL_WAITPID","SYSCALL_WRITE","SYSCALL_YIELD","fs","process","syscall","sys_close","sys_dup","sys_fstat","sys_linkat","sys_open","sys_pipe","sys_read","sys_unlinkat","sys_write","TaskInfo","TimeVal","borrow","borrow","borrow_mut","borrow_mut","check_sigaction_error","fmt","from","from","into","into","sec","status","sys_exec","sys_exit","sys_fork","sys_get_time","sys_getpid","sys_kill","sys_mmap","sys_munmap","sys_sbrk","sys_set_priority","sys_sigaction","sys_sigprocmask","sys_sigreturn","sys_spawn","sys_task_info","sys_waitpid","sys_yield","syscall_times","time","try_from","try_from","try_into","try_into","type_id","type_id","usec","IDLE_PID","INITPROC","KernelStack","MAX_SIG","PidHandle","Ready","Running","SignalAction","SignalActions","SignalFlags","TaskContext","TaskControlBlock","TaskStatus","UnInit","Zombie","__private_field","action","add_initproc","add_task","bits","borrow","borrow_mut","call_kernel_signal_handler","call_user_signal_handler","check_pending_signals","check_signals_error_of_current","context","current_add_signal","current_task","current_trap_cx","current_user_token","deref","exit_current_and_run_next","from","handle_signals","handler","id","inner","into","kernel_stack","kstack_alloc","manager","mask","pid","pid2task","pid_alloc","processor","ra","run_tasks","s","schedule","signal","sp","suspend_current_and_run_next","switch","table","take_current_task","task","try_from","try_into","type_id","SignalAction","SignalActions","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","default","fmt","from","from","handler","into","into","mask","table","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","TaskContext","borrow","borrow_mut","from","goto_trap_return","into","ra","s","sp","try_from","try_into","type_id","zero_init","KSTACK_ALLOCATOR","KernelStack","PID_ALLOCATOR","PidHandle","RecycleAllocator","__private_field","__private_field","alloc","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","current","dealloc","deref","deref","drop","drop","from","from","from","from","from","get_top","into","into","into","into","into","kernel_stack_position","kstack_alloc","new","pid_alloc","push_on_top","recycled","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","PID2TCB","TASK_MANAGER","TaskManager","__private_field","__private_field","add","add_task","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","deref","deref","fetch","fetch_task","from","from","from","into","into","into","new","pid2task","ready_queue","remove_from_pid2task","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","PROCESSOR","Processor","__private_field","borrow","borrow","borrow_mut","borrow_mut","current","current","current_task","current_trap_cx","current_user_token","deref","from","from","get_idle_task_cx_ptr","idle_task_cx","into","into","new","run_tasks","schedule","take_current","take_current_task","try_from","try_from","try_into","try_into","type_id","type_id","MAX_SIG","SIGABRT","SIGALRM","SIGBUS","SIGCHLD","SIGCONT","SIGDEF","SIGFPE","SIGHUP","SIGILL","SIGINT","SIGIO","SIGKILL","SIGPIPE","SIGPROF","SIGPWR","SIGQUIT","SIGSEGV","SIGSTKFLT","SIGSTOP","SIGSYS","SIGTERM","SIGTRAP","SIGTSTP","SIGTTIN","SIGTTOU","SIGURG","SIGUSR1","SIGUSR2","SIGVTALRM","SIGWINCH","SIGXCPU","SIGXFSZ","SignalFlags","all","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow_mut","check_error","clone","clone_into","cmp","complement","contains","difference","empty","eq","extend","fmt","fmt","fmt","fmt","fmt","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","hash","insert","intersection","intersects","into","is_all","is_empty","not","partial_cmp","remove","set","sub","sub_assign","symmetric_difference","to_owned","toggle","try_from","try_into","type_id","union","__switch","Ready","Running","TaskControlBlock","TaskControlBlockInner","TaskStatus","UnInit","Zombie","alloc_fd","base_size","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","change_program_brk","children","clone","clone_into","eq","exec","exit_code","fd_table","fork","from","from","from","frozen","get_status","get_trap_cx","get_user_token","get_user_token","getpid","handling_sig","heap_bottom","inner","inner_exclusive_access","into","into","into","is_zombie","kernel_stack","killed","memory_set","new","parent","pid","program_brk","signal_actions","signal_mask","signals","task_cx","task_status","to_owned","trap_ctx_backup","trap_cx_ppn","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","MICRO_PER_SEC","MSEC_PER_SEC","TICKS_PER_SEC","get_time","get_time_ms","get_time_us","set_next_trigger","TrapContext","context","enable_timer_interrupt","init","kernel_satp","kernel_sp","sepc","set_kernel_trap_entry","set_user_trap_entry","sstatus","trap_from_kernel","trap_handler","trap_handler","trap_return","x","TrapContext","app_init_context","borrow","borrow_mut","clone","clone_into","fmt","from","into","kernel_satp","kernel_sp","sepc","set_sp","sstatus","to_owned","trap_handler","try_from","try_into","type_id","x"],"q":[[0,"os"],[17,"os::config"],[28,"os::console"],[38,"os::drivers"],[41,"os::drivers::block"],[55,"os::drivers::block::virtio_blk"],[89,"os::fs"],[180,"os::fs::inode"],[276,"os::fs::pipe"],[330,"os::fs::stdio"],[354,"os::lang_items"],[355,"os::logging"],[367,"os::mm"],[409,"os::mm::address"],[532,"os::mm::frame_allocator"],[581,"os::mm::heap_allocator"],[586,"os::mm::memory_set"],[723,"os::mm::page_table"],[850,"os::sbi"],[859,"os::sync"],[862,"os::sync::up"],[873,"os::syscall"],[902,"os::syscall::fs"],[911,"os::syscall::process"],[951,"os::task"],[1012,"os::task::action"],[1040,"os::task::context"],[1053,"os::task::id"],[1109,"os::task::manager"],[1145,"os::task::processor"],[1175,"os::task::signal"],[1260,"os::task::switch"],[1261,"os::task::task"],[1326,"os::timer"],[1333,"os::trap"],[1348,"os::trap::context"],[1368,"core::fmt"],[1369,"core::result"],[1370,"core::any"],[1371,"easy_fs::block_dev"],[1372,"alloc::sync"],[1373,"alloc::vec"],[1374,"core::cmp"],[1375,"core::iter::traits::collect"],[1376,"core::option"],[1377,"core::hash"],[1378,"easy_fs::vfs"],[1379,"core::panic::panic_info"],[1380,"log"],[1381,"alloc::string"],[1382,"core::marker"],[1383,"core::clone"],[1384,"core::alloc::layout"],[1385,"core::cell"],[1386,"alloc::collections::btree::map"]],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,6,6,0,6,6,6,6,0,0,0,0,0,0,9,0,9,9,9,9,9,9,9,9,0,0,0,0,0,12,18,99,12,18,99,12,12,99,99,18,99,12,18,99,12,18,99,18,18,99,12,18,99,12,18,99,12,99,18,21,21,0,21,0,0,0,0,0,0,0,21,21,21,21,21,21,33,21,21,21,27,21,27,21,31,21,21,21,21,21,27,21,21,21,21,27,21,21,21,21,21,27,21,21,21,21,21,21,34,27,0,21,21,21,27,21,21,21,0,0,27,27,21,0,27,21,0,35,35,34,31,21,21,0,21,21,21,21,21,27,21,27,21,27,21,21,35,34,31,35,33,0,0,0,33,33,0,33,33,37,33,33,33,33,33,33,33,33,33,34,100,37,33,34,100,37,33,33,33,33,33,33,37,33,33,33,33,33,33,33,33,33,34,100,37,33,33,33,33,33,33,34,100,33,33,33,34,100,37,33,33,33,0,34,33,100,0,33,34,34,33,34,34,33,33,33,33,33,33,33,34,100,37,33,34,100,37,33,34,100,37,33,33,34,34,34,40,40,40,0,0,0,0,39,39,39,39,31,39,40,31,39,40,31,40,40,40,31,39,40,39,31,39,40,0,39,31,39,31,31,31,39,39,39,40,31,39,40,31,39,40,31,39,40,31,31,31,39,39,31,0,0,41,42,41,42,41,42,41,42,41,42,41,42,41,42,41,42,41,42,41,42,41,42,0,0,44,44,44,44,44,0,44,44,44,44,44,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,71,0,66,67,59,36,73,73,73,0,0,0,69,0,0,0,0,0,66,13,0,69,48,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,50,51,61,50,51,47,52,53,61,50,51,47,52,53,50,51,50,51,47,52,53,50,51,47,52,53,50,51,47,52,61,61,50,51,47,52,50,51,50,51,47,52,61,50,50,50,51,51,51,47,47,47,52,52,52,53,47,53,50,47,47,50,53,52,61,50,51,47,52,53,61,53,101,53,61,53,61,50,51,50,51,47,52,101,53,48,47,52,50,51,47,52,53,61,50,51,47,52,53,61,50,51,47,52,53,61,50,51,47,52,53,0,0,0,0,0,64,62,63,13,63,64,13,63,64,63,102,62,63,64,13,63,102,13,0,0,0,13,63,64,63,0,13,63,64,62,13,63,13,63,102,13,63,64,13,63,64,13,63,64,0,0,0,0,0,70,70,0,0,0,0,0,67,67,67,67,71,66,67,66,68,66,67,67,67,67,67,67,67,67,66,68,71,70,67,66,68,71,70,67,70,67,70,67,67,67,67,68,68,71,67,0,0,0,67,70,67,0,0,67,70,67,67,67,67,67,66,68,71,70,67,68,67,67,67,66,66,67,67,67,66,67,67,66,68,71,70,67,67,67,0,68,68,68,66,68,68,66,66,67,66,67,66,66,0,67,66,0,0,67,66,68,0,0,0,67,67,67,70,67,67,66,66,66,68,71,70,67,66,68,71,70,67,66,68,71,70,67,67,68,68,68,72,72,72,0,0,0,72,72,0,0,72,72,72,72,72,72,72,72,72,72,59,72,72,69,36,73,72,59,69,36,73,72,59,36,73,72,59,72,59,72,72,72,73,73,72,72,59,72,59,72,69,69,59,72,72,72,72,72,69,69,36,73,72,59,72,72,72,72,69,72,72,72,72,69,36,73,72,59,36,73,72,72,59,36,69,69,36,59,73,72,72,59,59,72,69,72,72,72,72,72,59,72,69,69,69,0,0,0,0,69,36,73,72,59,69,36,73,72,59,69,36,73,72,59,72,69,59,0,0,0,0,0,0,0,0,0,0,15,0,0,15,15,15,15,15,15,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,79,77,79,77,0,77,79,77,79,77,77,79,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,79,79,79,77,79,77,79,77,77,0,0,0,0,0,98,98,0,0,0,0,0,0,98,98,82,0,0,0,76,82,82,0,0,0,0,0,0,0,0,0,82,0,82,0,78,0,80,82,80,0,0,78,80,0,0,0,85,0,85,0,0,85,0,0,86,0,0,82,82,82,0,0,78,86,78,86,78,86,78,86,78,86,78,78,86,78,78,86,78,86,78,86,78,86,78,86,78,86,0,85,85,85,85,85,85,85,85,85,85,85,85,0,0,0,0,0,88,89,87,87,84,83,88,89,87,84,83,88,89,87,87,88,89,84,83,87,84,83,88,89,83,87,84,83,88,89,0,0,87,0,83,87,87,84,83,88,89,87,84,83,88,89,87,84,83,88,89,0,0,0,92,93,91,0,91,92,93,91,92,93,92,93,91,0,91,92,93,91,92,93,91,0,91,0,91,92,93,91,92,93,91,92,93,0,0,96,95,96,95,96,95,95,0,0,0,96,95,96,95,95,95,96,95,0,0,95,0,95,96,95,96,95,96,0,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,0,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,76,0,98,98,0,0,0,98,98,97,97,80,97,98,80,97,98,80,97,98,98,98,80,97,97,80,80,97,98,97,97,97,80,97,80,97,97,80,80,80,97,98,97,80,97,97,80,97,80,97,97,97,97,97,97,98,97,97,80,97,98,80,97,98,80,97,98,0,0,0,0,0,0,0,0,0,0,0,81,81,81,0,0,81,0,0,81,0,81,0,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81],"f":"{{}b}`````````{{}d}``````````````````{ce{}{}}0{cc{}}1{fb}{c{{h{e}}}{}{}}0{cj{}}{{ln}A`}```````755{Ab{{Af{Ad}}}}56332``````666666{Ah{{An{{Al{Aj}}}}}}{B`B`}{{B`B`}Bb}888999{{}Bd}2{{BdB`{Bh{Bf}}}b}88888877730```````````{{}Bj}{{BjBj}Bj}{{BjBj}b}10{BjBl}``21????`{BjBj}{{ce}b{}{}}{{BjBj}Bn}2{{BjBj}C`}`670{{Bjc}b{{Cd{}{{Cb{Bj}}}}}}{{CfCh}A`}{{BjCh}A`}0000{cc{}}0{Bl{{Cj{Bj}}}}{BlBj}0{cBj{{Cd{}{{Cb{Bj}}}}}}{{Bjc}bCl}```=>8{ce{}{}}0{BjC`}0{{}b}{{}{{D`{{Af{Cn}}{Af{Cn}}}}}}``?{{nDb}{{Cj{{Af{Dd}}}}}}`{{BjBj}{{Cj{Bn}}}}`{{DfDh}B`}{DfC`}``{{BjBj}b}{{BjBjC`}b}`{{BjBj}Bj}20:2{c{{h{e}}}{}{}}000{cj{}}025``6``````````{{}Db}{{DbDb}Db}{{DbDb}b}10{DbBl}`21{ce{}{}}0000000{DbDb}{{ce}b{}{}}{{DbDb}Bn}2{{DbDb}C`}{Dj{{Af{Dl}}}}891{{Dbc}b{{Cd{}{{Cb{Db}}}}}}{{DbCh}A`}0000{cc{}}000{Bl{{Cj{Db}}}}{BlDb}0{cDb{{Cd{}{{Cb{Db}}}}}}{{Dbc}bCl}``>?8<<<<{DbC`}0{{}b}{{C`C`{Af{Dl}}}Dd}>`{{nDb}{{Cj{{Af{Dd}}}}}}{{DbDb}{{Cj{Bn}}}}{{DdDh}B`}{Dd{{Al{Bf}}}}{Db{{D`{C`C`}}}}{DdC`}`{{DbDb}b}{{DbDbC`}b}{{DbDb}Db}20{ce{}{}}3{c{{h{e}}}{}{}}0000000{cj{}}00036`9```````{DnC`}`{DnB`}0444444`{E`E`}{{ce}b{}{}}{{E`E`}C`}{cc{}}00`888{{}{{D`{{Af{Cn}}{Af{Cn}}}}}}{{}Dn}{{CnDh}B`}{DnBf}{{{Af{{An{Dn}}}}}Cn}{CnC`}`{{Dn{Af{Cn}}}b}``?>>>>>>===1`4{{DnBf}b}`3``{ce{}{}}0009900{{EbDh}B`}{{EdDh}B`}{EbC`}{EdC`}{c{{h{e}}}{}{}}000{cj{}}03254{Efd}`77{{EhEj}C`}{Ehb}{cc{}}{{}b};{{EhEl}b}776````````````````````````{{}{{Cj{Aj}}}}`{Enb}``3{{}B`}````4`{F`b}{{B`BfB`}{{Al{{Bh{Bf}}}}}}{B`c{}}0{{B`Bf}Fb}````````````{FdC`}{FfC`}{ce{}{}}00000000000{FdEn}{FfFh}{FdFd}{FfFf}{EnEn}{FhFh}{{{Fj{c}}}{{Fj{c}}}{F`FlFnG`GbGd}}{{ce}b{}{}}0000{{FdFd}Bn}{{FfFf}Bn}{{EnEn}Bn}{{FhFh}Bn}``{{FdFd}C`}{{FfFf}C`}{{EnEn}C`}{{FhFh}C`}?>{{FdCh}A`}{{FfCh}A`}{{EnCh}A`}{{FhCh}A`}{cc{}}0{B`Fd}{EnFd}2{B`Ff}{FhFf}{FdEn}5{B`En}6{B`Fh}{FfFh}8{En{{Bh{Bf}}}}{{{Fj{c}}}c{F`FlFnG`Gb}}{Fdc{}}{Enc{}}{En{{Bh{Gf}}}}23{Fh{{Gh{B`}}}}{ce{}{}}000000{{{Fj{c}}}e{F`FlFnG`Gb}{}}``{{cc}{{Gj{c}}}{F`FlFnG`Gb}}{{cc}{{Fj{c}}}{F`FlFnG`Gb}}{{{Gj{c}}}{{Cj{e}}}{F`FlFnG`Gb}{}}{FdB`}{FfB`}{{FdFd}{{Cj{Bn}}}}{{FfFf}{{Cj{Bn}}}}{{EnEn}{{Cj{Bn}}}}{{FhFh}{{Cj{Bn}}}}``{F`b}{Enb}{Fhb}====={c{{h{e}}}{}{}}00000000000{cj{}}00000``````{Gl{{Cj{En}}}}{Gn{{Cj{En}}}}{ce{}{}}00000``{{GlEn}b}{{GnEn}b}{H`{{An{Gn}}}}{Ajb}``{{AjCh}A`}{{}{{Cj{Aj}}}}{{}b}={cc{}}00{{GnEnEn}b}2999{{}Gl}{EnAj}{{}Gn}```{c{{h{e}}}{}{}}00000{cj{}}00``{Hbd}88````````````{Hdb}{{}Hf}{{HdFfFf}C`}{{HhHjFh}b}`{{HfHf}Hf}{{HfHf}b}10{HfBf}`21{ce{}{}}000000000{HlHl}{HfHf}{{ce}b{}{}}0{{HfHf}Bn}2{{HfHf}C`}{{HhHj{Bh{Bf}}}b}`{Hn{{Af{{An{Hd}}}}}}:```={{HlHl}C`}3``{{Hfc}b{{Cd{}{{Cb{Hf}}}}}}{{HlCh}A`}{{HfCh}A`}0000{cc{}}0000{HhHh}{Bf{{Cj{Hf}}}}{BfHf}0{{{Bh{Bf}}}{{D`{HdB`B`}}}}{HdHd}{cHf{{Cd{}{{Cb{Hf}}}}}}{{Hfc}bCl}{{HfHf}b}{{HdFfFfHf}b}{{HfHf}Hf}{{HfHf}C`}{ce{}{}}0000{HfC`}0{{}B`}{{HhHj}b}{{HhHjFh}b}`{Hdb}`{{FfFfHlHf}Hh}{{}Hd}0{HfHf}`{{HfHf}{{Cj{Bn}}}}{{HdHh{Cj{{Bh{Bf}}}}}b}5{{}b}?{{HdFh}b}``{{HfHfC`}b}{{HdFfFf}C`}:```{{HfHf}Hf}{{HfHf}b}1{ce{}{}}01{HdB`}{{HdFh}{{Cj{Gf}}}}{c{{h{e}}}{}{}}000000000{cj{}}00006{{HhHj}b}{{HhHjFh}b}``````````````{{}I`}{{I`I`}I`}{{I`I`}b}10{I`Bf}``21::::::::::``{I`I`}{GfGf}{{ce}b{}{}}0{{I`I`}Bn}3{{I`I`}C`}``78{{}Gf}1{GfC`}{{I`c}b{{Cd{}{{Cb{I`}}}}}}{{HjFh}{{Cj{Gf}}}}0{GfI`}{{I`Ch}A`}0000`{cc{}}0000{Bf{{Cj{I`}}}}{BfI`}0{cI`{{Cd{}{{Cb{I`}}}}}}{B`Hj}{{I`c}bCl}{{I`I`}b}{{I`I`}I`}>{ce{}{}}0000{Dhc{}}1{I`C`}0?{DhB`}{{HjFhEnI`}b}{{}Hj}{{{Al{{Bh{Bf}}}}}Dh}{{EnI`}Gf}{Ib{{Cj{c}}}{}}{I`I`}{{I`I`}{{Cj{Bn}}}}{GfEn}{GfC`}>`{{I`I`C`}b}>?>==?{HjB`}{{HjFh}{{Cj{Gf}}}}{{HjFf}{{Cj{Fd}}}}{{B`BfB`}{{Al{{Bh{Bf}}}}}}{B`c{}}0{{B`Bf}Fb}{c{{h{e}}}{}{}}000000000{cj{}}0000{{I`I`}I`}{{HjFh}b};````{{}B`}{B`b}{{B`B`B`B`}B`}1{{}d}````{ce{}{}}0{{{An{c}}}{{Id{c}}}{}}{cc{}}`2{c{{An{c}}}{}};;:````````````````````````````{{B`{Gh{B`}}}If}{B`If}0{{B`Cf}If}{{BfBf}If}{{BfBl}If}3{{B`BfB`}If}{BfIf}1``::::{{IhB`B`}C`}{{IjCh}A`}::<<``{{BfB`}If}{Bbd}{{}If}{{IjB`}If}1{{B`Bb}If}{{B`B`B`}If}{{B`B`}If}{BbIf}{IfIf}{{BbIlIl}If}{BlIf}8={InIf}{{IfBb}If}:``{c{{h{e}}}{}{}}000{cj{}}0``````````````````{{}b}{{{Af{J`}}}b}`{ce{}{}}0{Ihb}{{B`Ih}b}4{{}{{Cj{{D`{Bbn}}}}}}`2{{}{{Cj{{Af{J`}}}}}}{{}Jb}{{}B`}{Jd{{Af{J`}}}}{Bbb}{cc{}};```9`{{}Jf}```{B`{{Cj{{Af{J`}}}}}}{{}Jh}``>`{Jjb}``?``9`{c{{h{e}}}{}{}}0{cj{}}``????{IlIl}{JlJl}{{ce}b{}{}}0{{}Il}{{}Jl}{{IlCh}A`}<<`{ce{}{}}0``00888877`00={B`Jj}1```998{{}Jj}```````{JnB`}3333333333`{{JnB`}b}{K`{{An{Jn}}}}{Kb{{An{Jn}}}}{Jhb}{Jfb}{cc{}}0000{JfB`}:::::{B`{{D`{B`B`}}}}{{}Jf}{{}Jn}{{}Jh}{{Jfc}{}Kd}`{c{{h{e}}}{}{}}000000000{cj{}}0000`````{{Kf{Af{J`}}}b}{{{Af{J`}}}b}{ce{}{}}00000{Kh{{An{Kf}}}}{Kj{{An{{Kl{B`{Af{J`}}}}}}}}{Kf{{Cj{{Af{J`}}}}}}{{}{{Cj{{Af{J`}}}}}}???444{{}Kf}{B`{{Cj{{Af{J`}}}}}}`{B`b};;;;;;:::```7777{Kn{{Cj{{Af{J`}}}}}}`4{{}Jb}{{}B`}{L`{{An{Kn}}}}{cc{}}0{KnJj}`=={{}Kn}{{}b}{Jjb}8<{c{{h{e}}}{}{}}000{cj{}}0``````````````````````````````````{{}Ih}{{IhIh}Ih}{{IhIh}b}10{IhBl}`21{ce{}{}}0{Ih{{Cj{{D`{Bbn}}}}}}{IhIh}{{ce}b{}{}}{{IhIh}Bn}2{{IhIh}C`}890{{Ihc}b{{Cd{}{{Cb{Ih}}}}}}{{IhCh}A`}0000{cc{}}{Bl{{Cj{Ih}}}}{BlIh}0{cIh{{Cd{}{{Cb{Ih}}}}}}{{Ihc}bCl}>?7<{IhC`}0;{{IhIh}{{Cj{Bn}}}}{{IhIh}b}{{IhIhC`}b}{{IhIh}Ih}20{ce{}{}}3{c{{h{e}}}{}{}}0{cj{}}3````````{LbB`}`333333{{J`Bb}{{Cj{B`}}}}`{LdLd}{{ce}b{}{}}{{LdLd}C`}{{J`{Bh{Bf}}{Al{Fb}}}b}``{{{Af{J`}}}{{Af{J`}}}}{cc{}}00`{LbLd}{LbJb}{J`B`}:0```{J`{{Id{Lb}}}}>>>{LbC`}```{{{Bh{Bf}}}J`}````````{ce{}{}}``{c{{h{e}}}{}{}}00000{cj{}}00```{{}B`}00{{}b}``00```00`{{}d}0`0``{{B`B`B`B`B`}Jb}66{JbJb}{{ce}b{}{}}{{JbCh}A`}{cc{}}:```{{JbB`}b}`;`::9`","D":"EFf","p":[[1,"unit"],[1,"never"],[5,"Arguments",1368],[6,"Result",1369],[5,"TypeId",1370],[5,"Stdout",28],[1,"str"],[8,"Result",1368],[5,"BLOCK_DEVICE",41],[10,"BlockDevice",1371],[5,"Arc",1372],[5,"QUEUE_FRAMES",55],[5,"FrameTracker",532],[5,"Vec",1373],[5,"UPSafeCell",862],[1,"usize"],[1,"i32"],[5,"VirtIOBlock",55],[1,"u8"],[1,"slice"],[5,"StatMode",89],[1,"u32"],[6,"Ordering",1374],[1,"bool"],[17,"Item"],[10,"IntoIterator",1375],[5,"Stat",89],[5,"Formatter",1368],[6,"Option",1376],[10,"Hasher",1377],[5,"Pipe",276],[1,"tuple"],[5,"OpenFlags",180],[5,"OSInode",180],[10,"File",89],[5,"UserBuffer",723],[5,"ROOT_INODE",180],[5,"Inode",1378],[5,"PipeRingBuffer",276],[6,"RingBufferStatus",276],[5,"Stdin",330],[5,"Stdout",330],[5,"PanicInfo",1379],[5,"SimpleLogger",355],[5,"Metadata",1380],[5,"Record",1380],[5,"PhysPageNum",409],[10,"StepByOne",409],[5,"String",1381],[5,"PhysAddr",409],[5,"VirtAddr",409],[5,"VirtPageNum",409],[5,"SimpleRange",409],[10,"Copy",1382],[10,"PartialEq",1374],[10,"PartialOrd",1374],[10,"Debug",1368],[10,"Clone",1383],[5,"PageTableEntry",723],[1,"array"],[5,"SimpleRangeIterator",409],[10,"FrameAllocator",532],[5,"StackFrameAllocator",532],[5,"FRAME_ALLOCATOR",532],[5,"Layout",1384],[5,"MemorySet",586],[5,"MapPermission",586],[5,"MapArea",586],[5,"PageTable",723],[6,"MapType",586],[5,"KERNEL_SPACE",586],[5,"PTEFlags",723],[5,"UserBufferIterator",723],[5,"RefMut",1385],[1,"isize"],[5,"SignalFlags",1175],[5,"TimeVal",911],[5,"SignalAction",1012],[5,"TaskInfo",911],[5,"TaskControlBlock",1261],[5,"TrapContext",1348],[5,"INITPROC",951],[5,"KernelStack",1053],[5,"PidHandle",1053],[5,"TaskContext",1040],[5,"SignalActions",1012],[5,"RecycleAllocator",1053],[5,"PID_ALLOCATOR",1053],[5,"KSTACK_ALLOCATOR",1053],[10,"Sized",1382],[5,"TaskManager",1109],[5,"TASK_MANAGER",1109],[5,"PID2TCB",1109],[5,"BTreeMap",1386],[5,"Processor",1145],[5,"PROCESSOR",1145],[5,"TaskControlBlockInner",1261],[6,"TaskStatus",1261],[5,"VirtioHal",55],[5,"OSInodeInner",180],[8,"VPNRange",409],[8,"FrameAllocatorImpl",532]],"r":[[38,41],[39,41],[43,55],[93,180],[94,180],[95,276],[98,330],[99,330],[148,180],[149,276],[153,180],[367,532],[368,586],[369,586],[370,586],[371,586],[372,586],[373,723],[374,723],[375,409],[376,409],[377,409],[378,723],[379,723],[380,409],[381,409],[391,532],[393,532],[397,586],[402,586],[405,723],[406,723],[407,723],[408,723],[859,862],[953,1053],[954,1175],[955,1053],[958,1012],[959,1012],[960,1175],[961,1040],[962,1261],[963,1261],[969,1109],[979,1145],[980,1145],[981,1145],[991,1053],[995,1109],[996,1053],[999,1145],[1001,1145],[1007,1145],[1333,1348]],"b":[[126,"impl-LowerHex-for-StatMode"],[127,"impl-Debug-for-StatMode"],[128,"impl-UpperHex-for-StatMode"],[129,"impl-Binary-for-StatMode"],[130,"impl-Octal-for-StatMode"],[217,"impl-UpperHex-for-OpenFlags"],[218,"impl-Debug-for-OpenFlags"],[219,"impl-LowerHex-for-OpenFlags"],[220,"impl-Binary-for-OpenFlags"],[221,"impl-Octal-for-OpenFlags"],[465,"impl-From%3Cusize%3E-for-PhysAddr"],[466,"impl-From%3CPhysPageNum%3E-for-PhysAddr"],[468,"impl-From%3Cusize%3E-for-VirtAddr"],[469,"impl-From%3CVirtPageNum%3E-for-VirtAddr"],[470,"impl-From%3CPhysAddr%3E-for-PhysPageNum"],[472,"impl-From%3Cusize%3E-for-PhysPageNum"],[474,"impl-From%3Cusize%3E-for-VirtPageNum"],[475,"impl-From%3CVirtAddr%3E-for-VirtPageNum"],[642,"impl-Octal-for-MapPermission"],[643,"impl-LowerHex-for-MapPermission"],[644,"impl-Debug-for-MapPermission"],[645,"impl-Binary-for-MapPermission"],[646,"impl-UpperHex-for-MapPermission"],[776,"impl-UpperHex-for-PTEFlags"],[777,"impl-Binary-for-PTEFlags"],[778,"impl-Debug-for-PTEFlags"],[779,"impl-Octal-for-PTEFlags"],[780,"impl-LowerHex-for-PTEFlags"],[1230,"impl-LowerHex-for-SignalFlags"],[1231,"impl-Binary-for-SignalFlags"],[1232,"impl-UpperHex-for-SignalFlags"],[1233,"impl-Debug-for-SignalFlags"],[1234,"impl-Octal-for-SignalFlags"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAKUCowAdAAIAIgAGACsAAAAtAAAALwACADQABQA7AAoATQAMAGsAAQBvAAcAfAAHAIkAAgCcAAEAoAABAKgAAACqAAUAsgABALsAAAC+AAAAxQAAAMgACgDVAAAA2AAGAOYAAwD2AAAA+AABAPwAAQADAQAABQELABIBBQAZARAALQEAADIBAgA2ARMATQEDAFUBDgBlAQMAbAEDAHEBAQB/AQMAhQECAIkBAACLAQAAjwEAAJEBAACUAQAAmgEBAKEBAACjAQAAqAELALYBEwDMAQMA0gEBANUBAgDZAQAA2wEBAN8BAADkAQAA7AEGAPUBBQD8ARgAFgIBABoCEQAyAgAANwIAADkCAAA7AgoASQIAAEsCAQBWAgAAWgIBAGECAABkAg4AdgIBAHkCAgB9AgoAjQIAAJMCAQChAgIApQIBAKoCAQCxAgEAtQIDALwCAQDBAg4A0QIFANoCAQDeAgIA5wIAAOsCCQD2AgUA/gIBAAMDAAAFAwAACQMFABcDAAAZAwAAIgMBACwDAAAuAwAAMgMAADcDAQBBAw4AUwMDAGADAQBnAwIAhwMBAIsDAgCPAwAAkQMGAJwDAACeAwIAogMBAKcDAwCuAwAAsQMGAMcDAQDLAwIA1wMAAOsDAADyAwIA9wMKAAkEBwASBAEAGgQCAB4EAAAgBAAAIgQTAEMEAABGBA8AWAQCAF0EBwBvBAAAcQQJAHwEBACGBAAAkgQFAMAEAADDBAEAxgQCAM0EBgDYBAEA4QQAAOcEAADpBAIA7QQAAPEEAAD1BAAA9wQFAP8EAgAEBQAACQUCAA0FAAAPBQAAFgUAABgFAAAeBQIAIwUBACYFCAA9BQEARwUEAFMFAABVBQIA"}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
