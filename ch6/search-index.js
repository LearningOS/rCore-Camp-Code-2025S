var searchIndex = new Map(JSON.parse('[\
["os",{"t":"HCCCCCCCQQHCCCCCCSSSSSSSSSSFNNNNHNNNNEECFIFOHNNNNNNNNCFSFFONNNNNNNNNNNNNNNNNNNNNNNNNNNNNTTKTFFFFFFNNNNNNOONNNNNNNNNNNONNNNNNNNNNNNNNNNNOOCNNNNNNNHOONHONMMONNCNNNNNNNNNNNNMOMTFFFTTFTTONNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNHNNOHNNNNNONNNNNNNNNNNNNNNNNNNNNONFFNNNNNNNNNNNNNNNNNNNNNNHFNNNNNHNNNNNFEEFFFFFFFKFFFFOCOOOOOOOHCHOCHHCCOOHOMHHHHSSFFFFKSISFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNOOMNNNNNNNNNNNNNNNNNNNNNNNNNFKIFFOMNNNNNNNOOMNNNOONHHHNNNNHNNNMNNOOONNNNNNNNNJJHHHPPFFFGFTTTTONNNNONNNNNONNNNNNNNNNNNNNNNNNNNONNHHHNNNHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNONONNNNONNNHNNHHNNNHHHNNNNNNNNNNNNNNNNNNNNNNNNNNOTTTFFFTTFFTTTNNNNNNOONNNNNNNNNNNNOONNNNNNNOONNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNHHHHNNNNNNNNNNNNNNNNNNSSSSHHHHHFOCFNNNNONNNNNSSSSSSSSSSSSSSSSSSSCCHHHHHHHHFNNNNNOHHHHHHHHHHHHNNNOSFFFFPPFFFGPPOHHNNCOHHHNHHNCOONOHCOHCOOHOHOHCHCNNNFNNNNNOOONNNNFFFFFOONNNNNNNNNNNONNNNNNNNNNNNNNNNHHNHNONNNNNNNNNNNNNNNFFONHNNNNNNHNNNNNONNNNNNFFONNNNNOHHHNNNNONNNHHNHNNNNNNHPPFFGPPNONNNNNNNONNNNOONNNNNNNNNOONNNNNOONOOOOONONNNNNNNNNSSSHHHHFCHHOOOHHOHHOHOFNNNNNNOOONOONNNO","n":["clear_bss","config","console","drivers","fs","lang_items","logging","mm","print","println","rust_main","sbi","sync","syscall","task","timer","trap","CLOCK_FREQ","KERNEL_HEAP_SIZE","KERNEL_STACK_SIZE","MEMORY_END","MMIO","PAGE_SIZE","PAGE_SIZE_BITS","TRAMPOLINE","TRAP_CONTEXT_BASE","USER_STACK_SIZE","Stdout","borrow","borrow_mut","from","into","print","try_from","try_into","type_id","write_str","BLOCK_DEVICE","BLOCK_DEVICE","block","BLOCK_DEVICE","BlockDeviceImpl","VirtIOBlock","__private_field","block_device_test","borrow","borrow_mut","deref","from","into","try_from","try_into","type_id","virtio_blk","QUEUE_FRAMES","VIRTIO0","VirtIOBlock","VirtioHal","__private_field","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","deref","dma_alloc","dma_dealloc","from","from","from","into","into","into","new","phys_to_virt","read_block","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","virt_to_phys","write_block","DIR","FILE","File","NULL","OSInode","OpenFlags","Stat","StatMode","Stdin","Stdout","all","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","cmp","complement","contains","dev","difference","empty","eq","extend","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","hash","inner","ino","inode","insert","intersection","intersects","into","into","is_all","is_empty","list_apps","mode","nlink","not","open_file","pad","partial_cmp","read","readable","readable","remove","set","stdio","sub","sub_assign","symmetric_difference","to_owned","toggle","try_from","try_from","try_into","try_into","type_id","type_id","union","writable","writable","write","CREATE","OSInode","OSInodeInner","OpenFlags","RDONLY","RDWR","ROOT_INODE","TRUNC","WRONLY","__private_field","all","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","cmp","complement","contains","deref","difference","empty","eq","extend","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","hash","inner","inode","insert","intersection","intersects","into","into","into","into","is_all","is_empty","list_apps","new","not","offset","open_file","partial_cmp","read","read_all","read_write","readable","readable","remove","set","sub","sub_assign","symmetric_difference","to_owned","toggle","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","union","writable","writable","write","Stdin","Stdout","borrow","borrow","borrow_mut","borrow_mut","from","from","into","into","read","read","readable","readable","try_from","try_from","try_into","try_into","type_id","type_id","writable","writable","write","write","panic","SimpleLogger","borrow","borrow_mut","enabled","flush","from","init","into","log","try_from","try_into","type_id","FrameTracker","KERNEL_SPACE","KERNEL_SPACE","KERNEL_SPACE","MapPermission","MemorySet","PageTable","PageTableEntry","PhysAddr","PhysPageNum","StepByOne","UserBuffer","UserBufferIterator","VirtAddr","VirtPageNum","__private_field","address","areas","bits","bits","buffers","buffers","current_buffer","current_idx","frame_alloc","frame_allocator","frame_dealloc","frames","heap_allocator","init","kernel_token","memory_set","page_table","page_table","ppn","remap_test","root_ppn","step","translated_byte_buffer","translated_ref","translated_refmut","translated_str","PA_WIDTH_SV39","PPN_WIDTH_SV39","PhysAddr","PhysPageNum","SimpleRange","SimpleRangeIterator","StepByOne","VA_WIDTH_SV39","VPNRange","VPN_WIDTH_SV39","VirtAddr","VirtPageNum","aligned","aligned","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","ceil","ceil","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","current","end","eq","eq","eq","eq","floor","floor","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","get_bytes_array","get_end","get_mut","get_mut","get_pte_array","get_ref","get_start","indexes","into","into","into","into","into","into","into_iter","into_iter","l","l","new","new","next","page_offset","page_offset","partial_cmp","partial_cmp","partial_cmp","partial_cmp","r","r","step","step","step","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","FRAME_ALLOCATOR","FrameAllocator","FrameAllocatorImpl","FrameTracker","StackFrameAllocator","__private_field","alloc","alloc","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","current","current","dealloc","dealloc","deref","drop","end","end","fmt","frame_alloc","frame_allocator_test","frame_dealloc","from","from","from","init","init_frame_allocator","into","into","into","new","new","new","ppn","recycled","recycled","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","HEAP_ALLOCATOR","HEAP_SPACE","handle_alloc_error","heap_test","init_heap","Framed","Identical","KERNEL_SPACE","MapArea","MapPermission","MapType","MemorySet","R","U","W","X","__private_field","activate","all","append_to","append_to","areas","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","complement","contains","copy_data","data_frames","deref","difference","ebss","edata","ekernel","empty","eq","eq","erodata","etext","extend","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_another","from_bits","from_bits_truncate","from_bits_unchecked","from_elf","from_existed_user","from_iter","hash","insert","insert_framed_area","intersection","intersects","into","into","into","into","into","is_all","is_empty","kernel_token","map","map_one","map_perm","map_trampoline","map_type","new","new_bare","new_kernel","not","page_table","partial_cmp","push","recycle_data_pages","remap_test","remove","remove_area_with_start_vpn","sbss_with_stack","sdata","set","shrink_to","shrink_to","srodata","stext","strampoline","sub","sub_assign","symmetric_difference","to_owned","to_owned","toggle","token","translate","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","union","unmap","unmap_one","vpn_range","A","D","G","PTEFlags","PageTable","PageTableEntry","R","U","UserBuffer","UserBufferIterator","V","W","X","all","bitand","bitand_assign","bitor","bitor_assign","bits","bits","bits","bitxor","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buffers","buffers","clone","clone","clone_into","clone_into","cmp","complement","contains","current_buffer","current_idx","difference","empty","empty","eq","executable","extend","find_pte","find_pte_create","flags","fmt","fmt","fmt","fmt","fmt","frames","from","from","from","from","from","from_bits","from_bits_truncate","from_bits_unchecked","from_iter","from_token","hash","insert","intersection","intersects","into","into","into","into","into","into_iter","into_iter","is_all","is_empty","is_valid","len","map","new","new","new","next","not","partial_cmp","ppn","readable","remove","root_ppn","set","sub","sub_assign","symmetric_difference","to_owned","to_owned","toggle","token","translate","translate_va","translated_byte_buffer","translated_ref","translated_refmut","translated_str","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","union","unmap","writable","SBI_CONSOLE_GETCHAR","SBI_CONSOLE_PUTCHAR","SBI_SET_TIMER","SBI_SHUTDOWN","console_getchar","console_putchar","sbi_call","set_timer","shutdown","UPSafeCell","inner","up","UPSafeCell","borrow","borrow_mut","exclusive_access","from","inner","into","new","try_from","try_into","type_id","SYSCALL_CLOSE","SYSCALL_EXEC","SYSCALL_EXIT","SYSCALL_FORK","SYSCALL_FSTAT","SYSCALL_GETPID","SYSCALL_GET_TIME","SYSCALL_LINKAT","SYSCALL_MMAP","SYSCALL_MUNMAP","SYSCALL_OPEN","SYSCALL_READ","SYSCALL_SBRK","SYSCALL_SET_PRIORITY","SYSCALL_SPAWN","SYSCALL_UNLINKAT","SYSCALL_WAITPID","SYSCALL_WRITE","SYSCALL_YIELD","fs","process","syscall","sys_close","sys_fstat","sys_linkat","sys_open","sys_read","sys_unlinkat","sys_write","TimeVal","borrow","borrow_mut","fmt","from","into","sec","sys_exec","sys_exit","sys_fork","sys_get_time","sys_getpid","sys_mmap","sys_munmap","sys_sbrk","sys_set_priority","sys_spawn","sys_waitpid","sys_yield","try_from","try_into","type_id","usec","IDLE_PID","INITPROC","KernelStack","PidHandle","Processor","Ready","Running","TaskContext","TaskControlBlock","TaskManager","TaskStatus","UnInit","Zombie","__private_field","add_initproc","add_task","borrow","borrow_mut","context","current","current_task","current_trap_cx","current_user_token","deref","exit_current_and_run_next","fetch_task","from","id","idle_task_cx","inner","into","kernel_stack","kstack_alloc","manager","pid","pid_alloc","processor","ra","ready_queue","run_tasks","s","schedule","sp","suspend_current_and_run_next","switch","take_current_task","task","try_from","try_into","type_id","TaskContext","borrow","borrow_mut","from","goto_trap_return","into","ra","s","sp","try_from","try_into","type_id","zero_init","KSTACK_ALLOCATOR","KernelStack","PID_ALLOCATOR","PidHandle","RecycleAllocator","__private_field","__private_field","alloc","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","current","dealloc","deref","deref","drop","drop","from","from","from","from","from","get_top","into","into","into","into","into","kernel_stack_position","kstack_alloc","new","pid_alloc","push_on_top","recycled","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","TASK_MANAGER","TaskManager","__private_field","add","add_task","borrow","borrow","borrow_mut","borrow_mut","deref","fetch","fetch_task","from","from","into","into","new","ready_queue","try_from","try_from","try_into","try_into","type_id","type_id","PROCESSOR","Processor","__private_field","borrow","borrow","borrow_mut","borrow_mut","current","current","current_task","current_trap_cx","current_user_token","deref","from","from","get_idle_task_cx_ptr","idle_task_cx","into","into","new","run_tasks","schedule","take_current","take_current_task","try_from","try_from","try_into","try_into","type_id","type_id","__switch","Ready","Running","TaskControlBlock","TaskControlBlockInner","TaskStatus","UnInit","Zombie","alloc_fd","base_size","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","change_program_brk","children","clone","clone_into","eq","exec","exit_code","fd_table","fork","from","from","from","get_status","get_trap_cx","get_user_token","get_user_token","getpid","heap_bottom","inner","inner_exclusive_access","into","into","into","is_zombie","kernel_stack","memory_set","new","parent","pid","program_brk","task_cx","task_status","to_owned","trap_cx_ppn","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","MICRO_PER_SEC","MSEC_PER_SEC","TICKS_PER_SEC","get_time","get_time_ms","get_time_us","set_next_trigger","TrapContext","context","enable_timer_interrupt","init","kernel_satp","kernel_sp","sepc","set_kernel_trap_entry","set_user_trap_entry","sstatus","trap_from_kernel","trap_handler","trap_handler","trap_return","x","TrapContext","app_init_context","borrow","borrow_mut","fmt","from","into","kernel_satp","kernel_sp","sepc","set_sp","sstatus","trap_handler","try_from","try_into","type_id","x"],"q":[[0,"os"],[17,"os::config"],[27,"os::console"],[37,"os::drivers"],[40,"os::drivers::block"],[54,"os::drivers::block::virtio_blk"],[88,"os::fs"],[173,"os::fs::inode"],[269,"os::fs::stdio"],[293,"os::lang_items"],[294,"os::logging"],[306,"os::mm"],[348,"os::mm::address"],[471,"os::mm::frame_allocator"],[520,"os::mm::heap_allocator"],[525,"os::mm::memory_set"],[662,"os::mm::page_table"],[789,"os::sbi"],[798,"os::sync"],[801,"os::sync::up"],[812,"os::syscall"],[834,"os::syscall::fs"],[841,"os::syscall::process"],[864,"os::task"],[914,"os::task::context"],[927,"os::task::id"],[983,"os::task::manager"],[1007,"os::task::processor"],[1037,"os::task::switch"],[1038,"os::task::task"],[1096,"os::timer"],[1103,"os::trap"],[1118,"os::trap::context"],[1135,"core::fmt"],[1136,"core::result"],[1137,"core::any"],[1138,"easy_fs::block_dev"],[1139,"alloc::sync"],[1140,"alloc::vec"],[1141,"core::cmp"],[1142,"core::iter::traits::collect"],[1143,"core::option"],[1144,"core::hash"],[1145,"easy_fs::vfs"],[1146,"core::panic::panic_info"],[1147,"log"],[1148,"alloc::string"],[1149,"core::marker"],[1150,"core::clone"],[1151,"core::alloc::layout"],[1152,"core::cell"]],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,6,6,6,0,6,6,6,6,0,0,0,0,0,0,9,0,9,9,9,9,9,9,9,9,0,0,0,0,0,12,18,90,12,18,90,12,12,90,90,18,90,12,18,90,12,18,90,18,18,90,12,18,90,12,18,90,12,90,18,21,21,0,21,0,0,0,0,0,0,21,21,21,21,21,21,31,21,21,21,27,21,27,21,21,21,21,21,21,27,21,21,21,21,27,21,21,21,21,21,27,21,21,21,21,21,21,32,27,0,21,21,21,27,21,21,21,0,27,27,21,0,27,21,33,33,32,21,21,0,21,21,21,21,21,27,21,27,21,27,21,21,33,32,33,31,0,0,0,31,31,0,31,31,35,31,31,31,31,31,31,31,31,31,32,91,35,31,32,91,35,31,31,31,31,31,31,35,31,31,31,31,31,31,31,31,31,32,91,35,31,31,31,31,31,31,32,91,31,31,31,32,91,35,31,31,31,0,32,31,91,0,31,32,32,31,32,32,31,31,31,31,31,31,31,32,91,35,31,32,91,35,31,32,91,35,31,31,32,32,32,0,0,38,39,38,39,38,39,38,39,38,39,38,39,38,39,38,39,38,39,38,39,38,39,0,0,41,41,41,41,41,0,41,41,41,41,41,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,68,0,63,64,56,34,70,70,70,0,0,0,66,0,0,0,0,0,63,13,0,66,45,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,47,48,58,47,48,44,49,50,58,47,48,44,49,50,47,48,47,48,44,49,50,47,48,44,49,50,47,48,44,49,58,58,47,48,44,49,47,48,47,48,44,49,58,47,47,47,48,48,48,44,44,44,49,49,49,50,44,50,47,44,44,47,50,49,58,47,48,44,49,50,58,50,92,50,58,50,58,47,48,47,48,44,49,92,50,45,44,49,47,48,44,49,50,58,47,48,44,49,50,58,47,48,44,49,50,58,47,48,44,49,50,0,0,0,0,0,61,59,60,13,60,61,13,60,61,60,93,59,60,61,13,60,93,13,0,0,0,13,60,61,60,0,13,60,61,59,13,60,13,60,93,13,60,61,13,60,61,13,60,61,0,0,0,0,0,67,67,0,0,0,0,0,64,64,64,64,68,63,64,63,65,63,64,64,64,64,64,64,64,64,63,65,68,67,64,63,65,68,67,64,67,64,67,64,64,64,64,65,65,68,64,0,0,0,64,67,64,0,0,64,67,64,64,64,64,64,63,65,68,67,64,65,64,64,64,63,63,64,64,64,63,64,64,63,65,68,67,64,64,64,0,65,65,65,63,65,65,63,63,64,63,64,63,63,0,64,63,0,0,64,63,65,0,0,0,64,64,64,67,64,64,63,63,63,65,68,67,64,63,65,68,67,64,63,65,68,67,64,64,65,65,65,69,69,69,0,0,0,69,69,0,0,69,69,69,69,69,69,69,69,69,69,56,69,69,66,34,70,69,56,66,34,70,69,56,34,70,69,56,69,56,69,69,69,70,70,69,69,56,69,56,69,66,66,56,69,69,69,69,69,66,66,34,70,69,56,69,69,69,69,66,69,69,69,69,66,34,70,69,56,34,70,69,69,56,34,66,66,34,56,70,69,69,56,56,69,66,69,69,69,69,69,56,69,66,66,66,0,0,0,0,66,34,70,69,56,66,34,70,69,56,66,34,70,69,56,69,66,56,0,0,0,0,0,0,0,0,0,0,15,0,0,15,15,15,15,15,15,15,15,15,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,73,73,73,73,73,73,0,0,0,0,0,0,0,0,0,0,0,0,73,73,73,73,0,0,0,0,0,89,89,0,0,0,0,89,89,76,0,0,76,76,0,86,0,0,0,76,0,0,76,0,86,74,76,74,0,0,74,0,0,79,84,0,79,0,79,0,0,0,0,76,76,76,0,79,79,79,79,79,79,79,79,79,79,79,79,0,0,0,0,0,81,82,80,80,78,77,81,82,80,78,77,81,82,80,80,81,82,78,77,80,78,77,81,82,77,80,78,77,81,82,0,0,80,0,77,80,80,78,77,81,82,80,78,77,81,82,80,78,77,81,82,0,0,85,84,0,84,85,84,85,85,84,0,84,85,84,85,84,84,84,85,84,85,84,85,0,0,87,86,87,86,87,86,86,0,0,0,87,86,87,86,86,86,87,86,0,0,86,0,86,87,86,87,86,87,0,89,89,0,0,0,89,89,88,88,74,88,89,74,88,89,74,88,89,89,89,74,88,88,74,74,88,89,88,88,74,88,74,88,74,74,74,88,89,88,74,88,74,88,74,88,88,88,89,88,74,88,89,74,88,89,74,88,89,0,0,0,0,0,0,0,0,0,0,0,75,75,75,0,0,75,0,0,75,0,75,0,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75],"f":"{{}b}`````````{{}d}`````````````````{ce{}{}}0{cc{}}1{fb}{c{{h{e}}}{}{}}0{cj{}}{{ln}A`}```````755{Ab{{Af{Ad}}}}56332``````666666{Ah{{An{{Al{Aj}}}}}}{B`B`}{{B`B`}Bb}888999{{}Bd}2{{BdB`{Bh{Bf}}}b}88888877730``````````{{}Bj}{{BjBj}Bj}{{BjBj}b}10{BjBl}``21????{BjBj}{{ce}b{}{}}{{BjBj}Bn}2{{BjBj}C`}`670{{Bjc}b{{Cd{}{{Cb{Bj}}}}}}{{CfCh}A`}{{BjCh}A`}0000{cc{}}0{Bl{{Cj{Bj}}}}{BlBj}0{cBj{{Cd{}{{Cb{Bj}}}}}}{{Bjc}bCl}```=>8{ce{}{}}0{BjC`}0{{}b}``>{{nCn}{{Cj{{Af{D`}}}}}}`{{BjBj}{{Cj{Bn}}}}{{DbDd}B`}{DbC`}`{{BjBj}b}{{BjBjC`}b}`{{BjBj}Bj}2092{c{{h{e}}}{}{}}000{cj{}}025`6``````````{{}Cn}{{CnCn}Cn}{{CnCn}b}10{CnBl}`21????????{CnCn}{{ce}b{}{}}{{CnCn}Bn}2{{CnCn}C`}{Df{{Af{Dh}}}}781{{Cnc}b{{Cd{}{{Cb{Cn}}}}}}{{CnCh}A`}0000{cc{}}000{Bl{{Cj{Cn}}}}{BlCn}0{cCn{{Cd{}{{Cb{Cn}}}}}}{{Cnc}bCl}``=>8{ce{}{}}000{CnC`}0{{}b}{{C`C`{Af{Dh}}}D`}?`{{nCn}{{Cj{{Af{D`}}}}}}{{CnCn}{{Cj{Bn}}}}{{D`Dd}B`}{D`{{Al{Bf}}}}{Cn{{Dj{C`C`}}}}{D`C`}`{{CnCn}b}{{CnCnC`}b}{{CnCn}Cn}20<2{c{{h{e}}}{}{}}0000000{cj{}}00025`8``>>>>{cc{}}0??{{DlDd}B`}{{DnDd}B`}{DlC`}{DnC`}6666551032{E`d}`{ce{}{}}0{{EbEd}C`}{Ebb}8{{}b}3{{EbEf}b}<<;````````````````````````{{}{{Cj{Aj}}}}`{Ehb}``3{{}B`}````4`{Ejb}{{B`BfB`}{{Al{{Bh{Bf}}}}}}{B`c{}}0{{B`Bf}El}````````````{EnC`}{F`C`}============{EnEh}{F`Fb}{EnEn}{F`F`}{EhEh}{FbFb}{{{Fd{c}}}{{Fd{c}}}{EjFfFhFjFlFn}}{{ce}b{}{}}0000{{EnEn}Bn}{{F`F`}Bn}{{EhEh}Bn}{{FbFb}Bn}``{{EnEn}C`}{{F`F`}C`}{{EhEh}C`}{{FbFb}C`}?>{{EnCh}A`}{{F`Ch}A`}{{EhCh}A`}{{FbCh}A`}{cc{}}{EhEn}{B`En}22{B`F`}{FbF`}{B`Eh}{EnEh}6{F`Fb}7{B`Fb}8{Eh{{Bh{Bf}}}}{{{Fd{c}}}c{EjFfFhFjFl}}{Enc{}}{Ehc{}}{Eh{{Bh{G`}}}}23{Fb{{Gb{B`}}}}{ce{}{}}000000{{{Fd{c}}}e{EjFfFhFjFl}{}}``{{cc}{{Gd{c}}}{EjFfFhFjFl}}{{cc}{{Fd{c}}}{EjFfFhFjFl}}{{{Gd{c}}}{{Cj{e}}}{EjFfFhFjFl}{}}{EnB`}{F`B`}{{EnEn}{{Cj{Bn}}}}{{F`F`}{{Cj{Bn}}}}{{EhEh}{{Cj{Bn}}}}{{FbFb}{{Cj{Bn}}}}``{Ejb}{Ehb}{Fbb}====={c{{h{e}}}{}{}}00000000000{cj{}}00000``````{Gf{{Cj{Eh}}}}{Gh{{Cj{Eh}}}}{ce{}{}}00000``{{GfEh}b}{{GhEh}b}{Gj{{An{Gh}}}}{Ajb}``{{AjCh}A`}{{}{{Cj{Aj}}}}{{}b}={cc{}}00{{GhEhEh}b}2999{{}Gf}{EhAj}{{}Gh}```{c{{h{e}}}{}{}}00000{cj{}}00``{Gld}88````````````{Gnb}{{}H`}{{GnF`F`}C`}{{HbHdFb}b}`{{H`H`}H`}{{H`H`}b}10{H`Bf}`21{ce{}{}}000000000{HfHf}{H`H`}{{ce}b{}{}}0{{H`H`}Bn}2{{H`H`}C`}{{HbHd{Bh{Bf}}}b}`{Hh{{Af{{An{Gn}}}}}}:```={{HfHf}C`}3``{{H`c}b{{Cd{}{{Cb{H`}}}}}}{{HfCh}A`}{{H`Ch}A`}0000{cc{}}0000{HbHb}{Bf{{Cj{H`}}}}{BfH`}0{{{Bh{Bf}}}{{Dj{GnB`B`}}}}{GnGn}{cH`{{Cd{}{{Cb{H`}}}}}}{{H`c}bCl}{{H`H`}b}{{GnF`F`H`}b}{{H`H`}H`}{{H`H`}C`}{ce{}{}}0000{H`C`}0{{}B`}{{HbHd}b}{{HbHdFb}b}`{Gnb}`{{F`F`HfH`}Hb}{{}Gn}0{H`H`}`{{H`H`}{{Cj{Bn}}}}{{GnHb{Cj{{Bh{Bf}}}}}b}5{{}b}?{{GnFb}b}``{{H`H`C`}b}{{GnF`F`}C`}:```{{H`H`}H`}{{H`H`}b}1{ce{}{}}01{GnB`}{{GnFb}{{Cj{G`}}}}{c{{h{e}}}{}{}}000000000{cj{}}00006{{HbHd}b}{{HbHdFb}b}``````````````{{}Hj}{{HjHj}Hj}{{HjHj}b}10{HjBf}``21::::::::::``{HjHj}{G`G`}{{ce}b{}{}}0{{HjHj}Bn}3{{HjHj}C`}``78{{}G`}1{G`C`}{{Hjc}b{{Cd{}{{Cb{Hj}}}}}}{{HdFb}{{Cj{G`}}}}0{G`Hj}{{HjCh}A`}0000`{cc{}}0000{Bf{{Cj{Hj}}}}{BfHj}0{cHj{{Cd{}{{Cb{Hj}}}}}}{B`Hd}{{Hjc}bCl}{{HjHj}b}{{HjHj}Hj}>{ce{}{}}0000{Ddc{}}1{HjC`}0?{DdB`}{{HdFbEhHj}b}{{}Hd}{{{Al{{Bh{Bf}}}}}Dd}{{EhHj}G`}{Hl{{Cj{c}}}{}}{HjHj}{{HjHj}{{Cj{Bn}}}}{G`Eh}{G`C`}>`{{HjHjC`}b}>?>==?{HdB`}{{HdFb}{{Cj{G`}}}}{{HdF`}{{Cj{En}}}}{{B`BfB`}{{Al{{Bh{Bf}}}}}}{B`c{}}0{{B`Bf}El}{c{{h{e}}}{}{}}000000000{cj{}}0000{{HjHj}Hj}{{HdFb}b};````{{}B`}{B`b}{{B`B`B`B`}B`}1{{}d}````{ce{}{}}0{{{An{c}}}{{Hn{c}}}{}}{cc{}}`2{c{{An{c}}}{}};;:`````````````````````{{B`{Gb{B`}}}I`}{B`I`}{{B`Cf}I`}{{BfBf}I`}{{BfBl}I`}{{B`BfB`}I`}{BfI`}1`::{{IbCh}A`}9;`1{Bbd}{{}I`}{{IbB`}I`}1{{B`B`B`}I`}{{B`B`}I`}{BbI`}{I`I`}8{{I`Bb}I`}6{c{{h{e}}}{}{}}0{cj{}}```````````````{{}b}{{{Af{Id}}}b}{ce{}{}}0``{{}{{Cj{{Af{Id}}}}}}{{}If}{{}B`}{Ih{{Af{Id}}}}{Bbb}4{cc{}}```6`{{}Ij}``{{}Il}```:`{Inb}`;`8`==<`993{B`In}:```>>={{}In}```````{J`B`}<<<<<<<<<<`{{J`B`}b}{Jb{{An{J`}}}}{Jd{{An{J`}}}}{Ilb}{Ijb};;;;;{IjB`}{ce{}{}}0000{B`{{Dj{B`B`}}}}={{}J`}={{Ijc}{}Jf}`{c{{h{e}}}{}{}}000000000{cj{}}0000```{{Jh{Af{Id}}}b}{{{Af{Id}}}b}7777{Jj{{An{Jh}}}}{Jh{{Cj{{Af{Id}}}}}}{{}{{Cj{{Af{Id}}}}}}{cc{}}0;;{{}Jh}`888877```<<<<{Jl{{Cj{{Af{Id}}}}}}`3{{}If}{{}B`}{Jn{{An{Jl}}}}55{JlIn}`{ce{}{}}0{{}Jl}{{}b}{Inb}8;{c{{h{e}}}{}{}}000{cj{}}0````````{K`B`}`666666{{IdBb}{{Cj{B`}}}}`{KbKb}{{ce}b{}{}}{{KbKb}C`}{{Id{Bh{Bf}}}b}``{{{Af{Id}}}{{Af{Id}}}}{cc{}}00{K`Kb}{K`If}{IdB`}:0``{Id{{Hn{K`}}}}{ce{}{}}00{K`C`}``{{{Bh{Bf}}}Id}`````2`{c{{h{e}}}{}{}}00000{cj{}}00```{{}B`}00{{}b}``00```00`{{}d}0`0``{{B`B`B`B`B`}If}88{{IfCh}A`}>9```{{IfB`}b}``776`","D":"DHj","p":[[1,"unit"],[1,"never"],[5,"Arguments",1135],[6,"Result",1136],[5,"TypeId",1137],[5,"Stdout",27],[1,"str"],[8,"Result",1135],[5,"BLOCK_DEVICE",40],[10,"BlockDevice",1138],[5,"Arc",1139],[5,"QUEUE_FRAMES",54],[5,"FrameTracker",471],[5,"Vec",1140],[5,"UPSafeCell",801],[1,"usize"],[1,"i32"],[5,"VirtIOBlock",54],[1,"u8"],[1,"slice"],[5,"StatMode",88],[1,"u32"],[6,"Ordering",1141],[1,"bool"],[17,"Item"],[10,"IntoIterator",1142],[5,"Stat",88],[5,"Formatter",1135],[6,"Option",1143],[10,"Hasher",1144],[5,"OpenFlags",173],[5,"OSInode",173],[10,"File",88],[5,"UserBuffer",662],[5,"ROOT_INODE",173],[5,"Inode",1145],[1,"tuple"],[5,"Stdin",269],[5,"Stdout",269],[5,"PanicInfo",1146],[5,"SimpleLogger",294],[5,"Metadata",1147],[5,"Record",1147],[5,"PhysPageNum",348],[10,"StepByOne",348],[5,"String",1148],[5,"PhysAddr",348],[5,"VirtAddr",348],[5,"VirtPageNum",348],[5,"SimpleRange",348],[10,"Copy",1149],[10,"PartialEq",1141],[10,"PartialOrd",1141],[10,"Debug",1135],[10,"Clone",1150],[5,"PageTableEntry",662],[1,"array"],[5,"SimpleRangeIterator",348],[10,"FrameAllocator",471],[5,"StackFrameAllocator",471],[5,"FRAME_ALLOCATOR",471],[5,"Layout",1151],[5,"MemorySet",525],[5,"MapPermission",525],[5,"MapArea",525],[5,"PageTable",662],[6,"MapType",525],[5,"KERNEL_SPACE",525],[5,"PTEFlags",662],[5,"UserBufferIterator",662],[5,"RefMut",1152],[1,"isize"],[5,"TimeVal",841],[5,"TaskControlBlock",1038],[5,"TrapContext",1118],[5,"INITPROC",864],[5,"KernelStack",927],[5,"PidHandle",927],[5,"TaskContext",914],[5,"RecycleAllocator",927],[5,"PID_ALLOCATOR",927],[5,"KSTACK_ALLOCATOR",927],[10,"Sized",1149],[5,"TaskManager",983],[5,"TASK_MANAGER",983],[5,"Processor",1007],[5,"PROCESSOR",1007],[5,"TaskControlBlockInner",1038],[6,"TaskStatus",1038],[5,"VirtioHal",54],[5,"OSInodeInner",173],[8,"VPNRange",348],[8,"FrameAllocatorImpl",471]],"r":[[37,40],[38,40],[42,54],[92,173],[93,173],[96,269],[97,269],[145,173],[149,173],[306,471],[307,525],[308,525],[309,525],[310,525],[311,525],[312,662],[313,662],[314,348],[315,348],[316,348],[317,662],[318,662],[319,348],[320,348],[330,471],[332,471],[336,525],[341,525],[344,662],[345,662],[346,662],[347,662],[798,801],[866,927],[867,927],[868,1007],[871,914],[872,1038],[873,983],[874,1038],[879,983],[884,1007],[885,1007],[886,1007],[889,983],[896,927],[899,927],[903,1007],[905,1007],[909,1007],[1103,1118]],"b":[[123,"impl-LowerHex-for-StatMode"],[124,"impl-Octal-for-StatMode"],[125,"impl-Debug-for-StatMode"],[126,"impl-UpperHex-for-StatMode"],[127,"impl-Binary-for-StatMode"],[210,"impl-LowerHex-for-OpenFlags"],[211,"impl-Binary-for-OpenFlags"],[212,"impl-Octal-for-OpenFlags"],[213,"impl-Debug-for-OpenFlags"],[214,"impl-UpperHex-for-OpenFlags"],[403,"impl-From%3CPhysPageNum%3E-for-PhysAddr"],[404,"impl-From%3Cusize%3E-for-PhysAddr"],[407,"impl-From%3Cusize%3E-for-VirtAddr"],[408,"impl-From%3CVirtPageNum%3E-for-VirtAddr"],[409,"impl-From%3Cusize%3E-for-PhysPageNum"],[410,"impl-From%3CPhysAddr%3E-for-PhysPageNum"],[412,"impl-From%3CVirtAddr%3E-for-VirtPageNum"],[414,"impl-From%3Cusize%3E-for-VirtPageNum"],[581,"impl-Octal-for-MapPermission"],[582,"impl-UpperHex-for-MapPermission"],[583,"impl-LowerHex-for-MapPermission"],[584,"impl-Debug-for-MapPermission"],[585,"impl-Binary-for-MapPermission"],[715,"impl-Debug-for-PTEFlags"],[716,"impl-Octal-for-PTEFlags"],[717,"impl-UpperHex-for-PTEFlags"],[718,"impl-LowerHex-for-PTEFlags"],[719,"impl-Binary-for-PTEFlags"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAACoCiwAcAAIAIQAGACoAAAAsAAAALgACADMABAA6AAoATAAMAGkAAQBtAAYAeQAHAIYAAgCYAAAAmwAAAKIAAACkAAUArAAAALQAAAC3AAAAvgAAAMEACgDOAAAA0QAGAN8AAwDvAAAA8QABAPUAAQD8AAAA/gALAAsBAgAQAQMAGAEOACgBAwAvAQMANAEBAEIBAABEAQEASAECAE4BAABUAQAAVwEAAF0BAQBkAQAAZgEAAGsBCwB5ARMAjwEDAJQBAQCYAQMAnQEAAJ8BAACiAQAApwEAAK8BBgC4AQUAvwEYANkBAQDdAREA9QEAAPoBAAD8AQAA/gEKAAwCAAAOAgEAGQIAAB0CAQAkAgAAJwIOADkCAQA8AgIAQAIKAFACAABWAgEAZAICAGgCAQBtAgEAdAIBAHgCAwB/AgEAhAIOAJQCBQCdAgEAoQICAKoCAACuAgkAuQIFAMECAQDGAgAAyAIAAMwCBQDaAgAA3AIAAOUCAQDvAgAA8QIAAPUCAAD6AgEABAMOABYDAwAjAwEAKgMCAEMDAABGAwEASQMEAFADAwBVAwAAWQMAAFwDBABuAwAAcQMBAHgDAACHAwAAkAMCAJQDAQCcAwIAoAMAAKIDAACkAxMAxQMAAMgDDwDaAwAA3QMEAOkDBwDyAwQA/AMAAAgEBgASBAAAFgQAABgEBQAgBAIAJQQAACoEAQAtBAAANQQAAD4EAABABAgAVwQBAGEEAgBsBAIA"}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
